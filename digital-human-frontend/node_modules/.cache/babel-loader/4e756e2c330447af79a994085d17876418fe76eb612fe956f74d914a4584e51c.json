{"ast":null,"code":"import { BufferGeometry, FileLoader, Float32BufferAttribute, Group, LineBasicMaterial, LineSegments, Loader, Material, Mesh, MeshPhongMaterial, Points, PointsMaterial, Vector3 } from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\nconst _ab = new Vector3();\nconst _cb = new Vector3();\nfunction ParserState() {\n  const state = {\n    objects: [],\n    object: {},\n    vertices: [],\n    normals: [],\n    colors: [],\n    uvs: [],\n    materials: {},\n    materialLibraries: [],\n    startObject: function (name, fromDeclaration) {\n      // If the current object (initial from reset) is not from a g/o declaration in the parsed\n      // file. We need to use it for the first parsed g/o to keep things in sync.\n      if (this.object && this.object.fromDeclaration === false) {\n        this.object.name = name;\n        this.object.fromDeclaration = fromDeclaration !== false;\n        return;\n      }\n      const previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n      this.object = {\n        name: name || '',\n        fromDeclaration: fromDeclaration !== false,\n        geometry: {\n          vertices: [],\n          normals: [],\n          colors: [],\n          uvs: [],\n          hasUVIndices: false\n        },\n        materials: [],\n        smooth: true,\n        startMaterial: function (name, libraries) {\n          const previous = this._finalize(false);\n\n          // New usemtl declaration overwrites an inherited material, except if faces were declared\n          // after the material, then it must be preserved for proper MultiMaterial continuation.\n          if (previous && (previous.inherited || previous.groupCount <= 0)) {\n            this.materials.splice(previous.index, 1);\n          }\n          const material = {\n            index: this.materials.length,\n            name: name || '',\n            mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n            smooth: previous !== undefined ? previous.smooth : this.smooth,\n            groupStart: previous !== undefined ? previous.groupEnd : 0,\n            groupEnd: -1,\n            groupCount: -1,\n            inherited: false,\n            clone: function (index) {\n              const cloned = {\n                index: typeof index === 'number' ? index : this.index,\n                name: this.name,\n                mtllib: this.mtllib,\n                smooth: this.smooth,\n                groupStart: 0,\n                groupEnd: -1,\n                groupCount: -1,\n                inherited: false\n              };\n              cloned.clone = this.clone.bind(cloned);\n              return cloned;\n            }\n          };\n          this.materials.push(material);\n          return material;\n        },\n        currentMaterial: function () {\n          if (this.materials.length > 0) {\n            return this.materials[this.materials.length - 1];\n          }\n          return undefined;\n        },\n        _finalize: function (end) {\n          const lastMultiMaterial = this.currentMaterial();\n          if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n            lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n            lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n            lastMultiMaterial.inherited = false;\n          }\n\n          // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n          if (end && this.materials.length > 1) {\n            for (let mi = this.materials.length - 1; mi >= 0; mi--) {\n              if (this.materials[mi].groupCount <= 0) {\n                this.materials.splice(mi, 1);\n              }\n            }\n          }\n\n          // Guarantee at least one empty material, this makes the creation later more straight forward.\n          if (end && this.materials.length === 0) {\n            this.materials.push({\n              name: '',\n              smooth: this.smooth\n            });\n          }\n          return lastMultiMaterial;\n        }\n      };\n\n      // Inherit previous objects material.\n      // Spec tells us that a declared material must be set to all objects until a new material is declared.\n      // If a usemtl declaration is encountered while this new object is being parsed, it will\n      // overwrite the inherited material. Exception being that there was already face declarations\n      // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n      if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n        const declared = previousMaterial.clone(0);\n        declared.inherited = true;\n        this.object.materials.push(declared);\n      }\n      this.objects.push(this.object);\n    },\n    finalize: function () {\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n    },\n    parseVertexIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseNormalIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseUVIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 2) * 2;\n    },\n    addVertex: function (a, b, c) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addVertexPoint: function (a) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addVertexLine: function (a) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addNormal: function (a, b, c) {\n      const src = this.normals;\n      const dst = this.object.geometry.normals;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addFaceNormal: function (a, b, c) {\n      const src = this.vertices;\n      const dst = this.object.geometry.normals;\n      _vA.fromArray(src, a);\n      _vB.fromArray(src, b);\n      _vC.fromArray(src, c);\n      _cb.subVectors(_vC, _vB);\n      _ab.subVectors(_vA, _vB);\n      _cb.cross(_ab);\n      _cb.normalize();\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n    },\n    addColor: function (a, b, c) {\n      const src = this.colors;\n      const dst = this.object.geometry.colors;\n      if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addUV: function (a, b, c) {\n      const src = this.uvs;\n      const dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n      dst.push(src[b + 0], src[b + 1]);\n      dst.push(src[c + 0], src[c + 1]);\n    },\n    addDefaultUV: function () {\n      const dst = this.object.geometry.uvs;\n      dst.push(0, 0);\n      dst.push(0, 0);\n      dst.push(0, 0);\n    },\n    addUVLine: function (a) {\n      const src = this.uvs;\n      const dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n    },\n    addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n      const vLen = this.vertices.length;\n      let ia = this.parseVertexIndex(a, vLen);\n      let ib = this.parseVertexIndex(b, vLen);\n      let ic = this.parseVertexIndex(c, vLen);\n      this.addVertex(ia, ib, ic);\n      this.addColor(ia, ib, ic);\n\n      // normals\n\n      if (na !== undefined && na !== '') {\n        const nLen = this.normals.length;\n        ia = this.parseNormalIndex(na, nLen);\n        ib = this.parseNormalIndex(nb, nLen);\n        ic = this.parseNormalIndex(nc, nLen);\n        this.addNormal(ia, ib, ic);\n      } else {\n        this.addFaceNormal(ia, ib, ic);\n      }\n\n      // uvs\n\n      if (ua !== undefined && ua !== '') {\n        const uvLen = this.uvs.length;\n        ia = this.parseUVIndex(ua, uvLen);\n        ib = this.parseUVIndex(ub, uvLen);\n        ic = this.parseUVIndex(uc, uvLen);\n        this.addUV(ia, ib, ic);\n        this.object.geometry.hasUVIndices = true;\n      } else {\n        // add placeholder values (for inconsistent face definitions)\n\n        this.addDefaultUV();\n      }\n    },\n    addPointGeometry: function (vertices) {\n      this.object.geometry.type = 'Points';\n      const vLen = this.vertices.length;\n      for (let vi = 0, l = vertices.length; vi < l; vi++) {\n        const index = this.parseVertexIndex(vertices[vi], vLen);\n        this.addVertexPoint(index);\n        this.addColor(index);\n      }\n    },\n    addLineGeometry: function (vertices, uvs) {\n      this.object.geometry.type = 'Line';\n      const vLen = this.vertices.length;\n      const uvLen = this.uvs.length;\n      for (let vi = 0, l = vertices.length; vi < l; vi++) {\n        this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n      }\n      for (let uvi = 0, l = uvs.length; uvi < l; uvi++) {\n        this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n      }\n    }\n  };\n  state.startObject('', false);\n  return state;\n}\n\n//\n\nclass OBJLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.materials = null;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  setMaterials(materials) {\n    this.materials = materials;\n    return this;\n  }\n  parse(text) {\n    const state = new ParserState();\n    if (text.indexOf('\\r\\n') !== -1) {\n      // This is faster than String.split with regex that splits on both\n      text = text.replace(/\\r\\n/g, '\\n');\n    }\n    if (text.indexOf('\\\\\\n') !== -1) {\n      // join lines separated by a line continuation character (\\)\n      text = text.replace(/\\\\\\n/g, '');\n    }\n    const lines = text.split('\\n');\n    let line = '',\n      lineFirstChar = '';\n    let lineLength = 0;\n    let result = [];\n\n    // Faster to just trim left side of the line. Use if available.\n    const trimLeft = typeof ''.trimLeft === 'function';\n    for (let i = 0, l = lines.length; i < l; i++) {\n      line = lines[i];\n      line = trimLeft ? line.trimLeft() : line.trim();\n      lineLength = line.length;\n      if (lineLength === 0) continue;\n      lineFirstChar = line.charAt(0);\n\n      // @todo invoke passed in handler if any\n      if (lineFirstChar === '#') continue;\n      if (lineFirstChar === 'v') {\n        const data = line.split(/\\s+/);\n        switch (data[0]) {\n          case 'v':\n            state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n            if (data.length >= 7) {\n              state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n            } else {\n              // if no colors are defined, add placeholders so color and vertex indices match\n\n              state.colors.push(undefined, undefined, undefined);\n            }\n            break;\n          case 'vn':\n            state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n            break;\n          case 'vt':\n            state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n            break;\n        }\n      } else if (lineFirstChar === 'f') {\n        const lineData = line.substr(1).trim();\n        const vertexData = lineData.split(/\\s+/);\n        const faceVertices = [];\n\n        // Parse the face vertex data into an easy to work with format\n\n        for (let j = 0, jl = vertexData.length; j < jl; j++) {\n          const vertex = vertexData[j];\n          if (vertex.length > 0) {\n            const vertexParts = vertex.split('/');\n            faceVertices.push(vertexParts);\n          }\n        }\n\n        // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n        const v1 = faceVertices[0];\n        for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n          const v2 = faceVertices[j];\n          const v3 = faceVertices[j + 1];\n          state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n        }\n      } else if (lineFirstChar === 'l') {\n        const lineParts = line.substring(1).trim().split(' ');\n        let lineVertices = [];\n        const lineUVs = [];\n        if (line.indexOf('/') === -1) {\n          lineVertices = lineParts;\n        } else {\n          for (let li = 0, llen = lineParts.length; li < llen; li++) {\n            const parts = lineParts[li].split('/');\n            if (parts[0] !== '') lineVertices.push(parts[0]);\n            if (parts[1] !== '') lineUVs.push(parts[1]);\n          }\n        }\n        state.addLineGeometry(lineVertices, lineUVs);\n      } else if (lineFirstChar === 'p') {\n        const lineData = line.substr(1).trim();\n        const pointData = lineData.split(' ');\n        state.addPointGeometry(pointData);\n      } else if ((result = _object_pattern.exec(line)) !== null) {\n        // o object_name\n        // or\n        // g group_name\n\n        // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n        // let name = result[ 0 ].substr( 1 ).trim();\n        const name = (' ' + result[0].substr(1).trim()).substr(1);\n        state.startObject(name);\n      } else if (_material_use_pattern.test(line)) {\n        // material\n\n        state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n      } else if (_material_library_pattern.test(line)) {\n        // mtl file\n\n        state.materialLibraries.push(line.substring(7).trim());\n      } else if (_map_use_pattern.test(line)) {\n        // the line is parsed but ignored since the loader assumes textures are defined MTL files\n        // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n        console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n      } else if (lineFirstChar === 's') {\n        result = line.split(' ');\n\n        // smooth shading\n\n        // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n        // but does not define a usemtl for each face set.\n        // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n        // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n        // where explicit usemtl defines geometry groups.\n        // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n        /*\n        \t * http://paulbourke.net/dataformats/obj/\n        \t * or\n        \t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n        \t *\n        \t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n        \t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n        \t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n        \t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n        \t * than 0.\"\n        \t */\n        if (result.length > 1) {\n          const value = result[1].trim().toLowerCase();\n          state.object.smooth = value !== '0' && value !== 'off';\n        } else {\n          // ZBrush can produce \"s\" lines #11707\n          state.object.smooth = true;\n        }\n        const material = state.object.currentMaterial();\n        if (material) material.smooth = state.object.smooth;\n      } else {\n        // Handle null terminated files without exception\n        if (line === '\\0') continue;\n        console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n      }\n    }\n    state.finalize();\n    const container = new Group();\n    container.materialLibraries = [].concat(state.materialLibraries);\n    const hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n    if (hasPrimitives === true) {\n      for (let i = 0, l = state.objects.length; i < l; i++) {\n        const object = state.objects[i];\n        const geometry = object.geometry;\n        const materials = object.materials;\n        const isLine = geometry.type === 'Line';\n        const isPoints = geometry.type === 'Points';\n        let hasVertexColors = false;\n\n        // Skip o/g line declarations that did not follow with any faces\n        if (geometry.vertices.length === 0) continue;\n        const buffergeometry = new BufferGeometry();\n        buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n        if (geometry.normals.length > 0) {\n          buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n        }\n        if (geometry.colors.length > 0) {\n          hasVertexColors = true;\n          buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n        }\n        if (geometry.hasUVIndices === true) {\n          buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n        }\n\n        // Create materials\n\n        const createdMaterials = [];\n        for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          const sourceMaterial = materials[mi];\n          const materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n          let material = state.materials[materialHash];\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name);\n\n            // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n            if (isLine && material && !(material instanceof LineBasicMaterial)) {\n              const materialLine = new LineBasicMaterial();\n              Material.prototype.copy.call(materialLine, material);\n              materialLine.color.copy(material.color);\n              material = materialLine;\n            } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n              const materialPoints = new PointsMaterial({\n                size: 10,\n                sizeAttenuation: false\n              });\n              Material.prototype.copy.call(materialPoints, material);\n              materialPoints.color.copy(material.color);\n              materialPoints.map = material.map;\n              material = materialPoints;\n            }\n          }\n          if (material === undefined) {\n            if (isLine) {\n              material = new LineBasicMaterial();\n            } else if (isPoints) {\n              material = new PointsMaterial({\n                size: 1,\n                sizeAttenuation: false\n              });\n            } else {\n              material = new MeshPhongMaterial();\n            }\n            material.name = sourceMaterial.name;\n            material.flatShading = sourceMaterial.smooth ? false : true;\n            material.vertexColors = hasVertexColors;\n            state.materials[materialHash] = material;\n          }\n          createdMaterials.push(material);\n        }\n\n        // Create mesh\n\n        let mesh;\n        if (createdMaterials.length > 1) {\n          for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            const sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials[0]);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n        mesh.name = object.name;\n        container.add(mesh);\n      }\n    } else {\n      // if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n      if (state.vertices.length > 0) {\n        const material = new PointsMaterial({\n          size: 1,\n          sizeAttenuation: false\n        });\n        const buffergeometry = new BufferGeometry();\n        buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n        if (state.colors.length > 0 && state.colors[0] !== undefined) {\n          buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n          material.vertexColors = true;\n        }\n        const points = new Points(buffergeometry, material);\n        container.add(points);\n      }\n    }\n    return container;\n  }\n}\nexport { OBJLoader };","map":{"version":3,"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Group","LineBasicMaterial","LineSegments","Loader","Material","Mesh","MeshPhongMaterial","Points","PointsMaterial","Vector3","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_vA","_vB","_vC","_ab","_cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","materialLine","prototype","copy","call","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","points"],"sources":["/Users/chenyangdu/Desktop/SCU/找工/联想/digital-human/digital-human-frontend/node_modules/three/examples/jsm/loaders/OBJLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet line = '', lineFirstChar = '';\n\t\tlet lineLength = 0;\n\t\tlet result = [];\n\n\t\t// Faster to just trim left side of the line. Use if available.\n\t\tconst trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tline = lines[ i ];\n\n\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\tlineLength = line.length;\n\n\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( /\\s+/ );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( /\\s+/ );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n"],"mappings":"AAAA,SACCA,cAAc,EACdC,UAAU,EACVC,sBAAsB,EACtBC,KAAK,EACLC,iBAAiB,EACjBC,YAAY,EACZC,MAAM,EACNC,QAAQ,EACRC,IAAI,EACJC,iBAAiB,EACjBC,MAAM,EACNC,cAAc,EACdC,OAAO,QACD,OAAO;;AAEd;AACA,MAAMC,eAAe,GAAG,eAAe;AACvC;AACA,MAAMC,yBAAyB,GAAG,UAAU;AAC5C;AACA,MAAMC,qBAAqB,GAAG,UAAU;AACxC;AACA,MAAMC,gBAAgB,GAAG,UAAU;AAEnC,MAAMC,GAAG,GAAG,IAAIL,OAAO,CAAC,CAAC;AACzB,MAAMM,GAAG,GAAG,IAAIN,OAAO,CAAC,CAAC;AACzB,MAAMO,GAAG,GAAG,IAAIP,OAAO,CAAC,CAAC;AAEzB,MAAMQ,GAAG,GAAG,IAAIR,OAAO,CAAC,CAAC;AACzB,MAAMS,GAAG,GAAG,IAAIT,OAAO,CAAC,CAAC;AAEzB,SAASU,WAAWA,CAAA,EAAG;EAEtB,MAAMC,KAAK,GAAG;IACbC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,CAAC,CAAC;IAEVC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,GAAG,EAAE,EAAE;IAEPC,SAAS,EAAE,CAAC,CAAC;IACbC,iBAAiB,EAAE,EAAE;IAErBC,WAAW,EAAE,SAAAA,CAAWC,IAAI,EAAEC,eAAe,EAAG;MAE/C;MACA;MACA,IAAK,IAAI,CAACT,MAAM,IAAI,IAAI,CAACA,MAAM,CAACS,eAAe,KAAK,KAAK,EAAG;QAE3D,IAAI,CAACT,MAAM,CAACQ,IAAI,GAAGA,IAAI;QACvB,IAAI,CAACR,MAAM,CAACS,eAAe,GAAKA,eAAe,KAAK,KAAO;QAC3D;MAED;MAEA,MAAMC,gBAAgB,GAAK,IAAI,CAACV,MAAM,IAAI,OAAO,IAAI,CAACA,MAAM,CAACW,eAAe,KAAK,UAAU,GAAG,IAAI,CAACX,MAAM,CAACW,eAAe,CAAC,CAAC,GAAGC,SAAW;MAEzI,IAAK,IAAI,CAACZ,MAAM,IAAI,OAAO,IAAI,CAACA,MAAM,CAACa,SAAS,KAAK,UAAU,EAAG;QAEjE,IAAI,CAACb,MAAM,CAACa,SAAS,CAAE,IAAK,CAAC;MAE9B;MAEA,IAAI,CAACb,MAAM,GAAG;QACbQ,IAAI,EAAEA,IAAI,IAAI,EAAE;QAChBC,eAAe,EAAIA,eAAe,KAAK,KAAO;QAE9CK,QAAQ,EAAE;UACTb,QAAQ,EAAE,EAAE;UACZC,OAAO,EAAE,EAAE;UACXC,MAAM,EAAE,EAAE;UACVC,GAAG,EAAE,EAAE;UACPW,YAAY,EAAE;QACf,CAAC;QACDV,SAAS,EAAE,EAAE;QACbW,MAAM,EAAE,IAAI;QAEZC,aAAa,EAAE,SAAAA,CAAWT,IAAI,EAAEU,SAAS,EAAG;UAE3C,MAAMC,QAAQ,GAAG,IAAI,CAACN,SAAS,CAAE,KAAM,CAAC;;UAExC;UACA;UACA,IAAKM,QAAQ,KAAMA,QAAQ,CAACC,SAAS,IAAID,QAAQ,CAACE,UAAU,IAAI,CAAC,CAAE,EAAG;YAErE,IAAI,CAAChB,SAAS,CAACiB,MAAM,CAAEH,QAAQ,CAACI,KAAK,EAAE,CAAE,CAAC;UAE3C;UAEA,MAAMC,QAAQ,GAAG;YAChBD,KAAK,EAAE,IAAI,CAAClB,SAAS,CAACoB,MAAM;YAC5BjB,IAAI,EAAEA,IAAI,IAAI,EAAE;YAChBkB,MAAM,EAAIC,KAAK,CAACC,OAAO,CAAEV,SAAU,CAAC,IAAIA,SAAS,CAACO,MAAM,GAAG,CAAC,GAAGP,SAAS,CAAEA,SAAS,CAACO,MAAM,GAAG,CAAC,CAAE,GAAG,EAAI;YACvGT,MAAM,EAAIG,QAAQ,KAAKP,SAAS,GAAGO,QAAQ,CAACH,MAAM,GAAG,IAAI,CAACA,MAAQ;YAClEa,UAAU,EAAIV,QAAQ,KAAKP,SAAS,GAAGO,QAAQ,CAACW,QAAQ,GAAG,CAAG;YAC9DA,QAAQ,EAAE,CAAE,CAAC;YACbT,UAAU,EAAE,CAAE,CAAC;YACfD,SAAS,EAAE,KAAK;YAEhBW,KAAK,EAAE,SAAAA,CAAWR,KAAK,EAAG;cAEzB,MAAMS,MAAM,GAAG;gBACdT,KAAK,EAAI,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,IAAI,CAACA,KAAO;gBACzDf,IAAI,EAAE,IAAI,CAACA,IAAI;gBACfkB,MAAM,EAAE,IAAI,CAACA,MAAM;gBACnBV,MAAM,EAAE,IAAI,CAACA,MAAM;gBACnBa,UAAU,EAAE,CAAC;gBACbC,QAAQ,EAAE,CAAE,CAAC;gBACbT,UAAU,EAAE,CAAE,CAAC;gBACfD,SAAS,EAAE;cACZ,CAAC;cACDY,MAAM,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACE,IAAI,CAAED,MAAO,CAAC;cACxC,OAAOA,MAAM;YAEd;UACD,CAAC;UAED,IAAI,CAAC3B,SAAS,CAAC6B,IAAI,CAAEV,QAAS,CAAC;UAE/B,OAAOA,QAAQ;QAEhB,CAAC;QAEDb,eAAe,EAAE,SAAAA,CAAA,EAAY;UAE5B,IAAK,IAAI,CAACN,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAG;YAEhC,OAAO,IAAI,CAACpB,SAAS,CAAE,IAAI,CAACA,SAAS,CAACoB,MAAM,GAAG,CAAC,CAAE;UAEnD;UAEA,OAAOb,SAAS;QAEjB,CAAC;QAEDC,SAAS,EAAE,SAAAA,CAAWsB,GAAG,EAAG;UAE3B,MAAMC,iBAAiB,GAAG,IAAI,CAACzB,eAAe,CAAC,CAAC;UAChD,IAAKyB,iBAAiB,IAAIA,iBAAiB,CAACN,QAAQ,KAAK,CAAE,CAAC,EAAG;YAE9DM,iBAAiB,CAACN,QAAQ,GAAG,IAAI,CAAChB,QAAQ,CAACb,QAAQ,CAACwB,MAAM,GAAG,CAAC;YAC9DW,iBAAiB,CAACf,UAAU,GAAGe,iBAAiB,CAACN,QAAQ,GAAGM,iBAAiB,CAACP,UAAU;YACxFO,iBAAiB,CAAChB,SAAS,GAAG,KAAK;UAEpC;;UAEA;UACA,IAAKe,GAAG,IAAI,IAAI,CAAC9B,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAG;YAEvC,KAAM,IAAIY,EAAE,GAAG,IAAI,CAAChC,SAAS,CAACoB,MAAM,GAAG,CAAC,EAAEY,EAAE,IAAI,CAAC,EAAEA,EAAE,EAAG,EAAG;cAE1D,IAAK,IAAI,CAAChC,SAAS,CAAEgC,EAAE,CAAE,CAAChB,UAAU,IAAI,CAAC,EAAG;gBAE3C,IAAI,CAAChB,SAAS,CAACiB,MAAM,CAAEe,EAAE,EAAE,CAAE,CAAC;cAE/B;YAED;UAED;;UAEA;UACA,IAAKF,GAAG,IAAI,IAAI,CAAC9B,SAAS,CAACoB,MAAM,KAAK,CAAC,EAAG;YAEzC,IAAI,CAACpB,SAAS,CAAC6B,IAAI,CAAE;cACpB1B,IAAI,EAAE,EAAE;cACRQ,MAAM,EAAE,IAAI,CAACA;YACd,CAAE,CAAC;UAEJ;UAEA,OAAOoB,iBAAiB;QAEzB;MACD,CAAC;;MAED;MACA;MACA;MACA;MACA;;MAEA,IAAK1B,gBAAgB,IAAIA,gBAAgB,CAACF,IAAI,IAAI,OAAOE,gBAAgB,CAACqB,KAAK,KAAK,UAAU,EAAG;QAEhG,MAAMO,QAAQ,GAAG5B,gBAAgB,CAACqB,KAAK,CAAE,CAAE,CAAC;QAC5CO,QAAQ,CAAClB,SAAS,GAAG,IAAI;QACzB,IAAI,CAACpB,MAAM,CAACK,SAAS,CAAC6B,IAAI,CAAEI,QAAS,CAAC;MAEvC;MAEA,IAAI,CAACvC,OAAO,CAACmC,IAAI,CAAE,IAAI,CAAClC,MAAO,CAAC;IAEjC,CAAC;IAEDuC,QAAQ,EAAE,SAAAA,CAAA,EAAY;MAErB,IAAK,IAAI,CAACvC,MAAM,IAAI,OAAO,IAAI,CAACA,MAAM,CAACa,SAAS,KAAK,UAAU,EAAG;QAEjE,IAAI,CAACb,MAAM,CAACa,SAAS,CAAE,IAAK,CAAC;MAE9B;IAED,CAAC;IAED2B,gBAAgB,EAAE,SAAAA,CAAWC,KAAK,EAAEC,GAAG,EAAG;MAEzC,MAAMnB,KAAK,GAAGoB,QAAQ,CAAEF,KAAK,EAAE,EAAG,CAAC;MACnC,OAAO,CAAElB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAGmB,GAAG,GAAG,CAAC,IAAK,CAAC;IAExD,CAAC;IAEDE,gBAAgB,EAAE,SAAAA,CAAWH,KAAK,EAAEC,GAAG,EAAG;MAEzC,MAAMnB,KAAK,GAAGoB,QAAQ,CAAEF,KAAK,EAAE,EAAG,CAAC;MACnC,OAAO,CAAElB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAGmB,GAAG,GAAG,CAAC,IAAK,CAAC;IAExD,CAAC;IAEDG,YAAY,EAAE,SAAAA,CAAWJ,KAAK,EAAEC,GAAG,EAAG;MAErC,MAAMnB,KAAK,GAAGoB,QAAQ,CAAEF,KAAK,EAAE,EAAG,CAAC;MACnC,OAAO,CAAElB,KAAK,IAAI,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAGmB,GAAG,GAAG,CAAC,IAAK,CAAC;IAExD,CAAC;IAEDI,SAAS,EAAE,SAAAA,CAAWC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAE/B,MAAMC,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,MAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACb,QAAQ;MAEzCkD,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAG,CAAC;MACpDI,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAE,EAAEE,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAE,EAAEE,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAG,CAAC;MACpDG,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAED,CAAC,GAAG,CAAC,CAAE,EAAEC,GAAG,CAAED,CAAC,GAAG,CAAC,CAAE,EAAEC,GAAG,CAAED,CAAC,GAAG,CAAC,CAAG,CAAC;IAErD,CAAC;IAEDG,cAAc,EAAE,SAAAA,CAAWL,CAAC,EAAG;MAE9B,MAAMG,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,MAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACb,QAAQ;MAEzCkD,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAG,CAAC;IAErD,CAAC;IAEDM,aAAa,EAAE,SAAAA,CAAWN,CAAC,EAAG;MAE7B,MAAMG,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,MAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACb,QAAQ;MAEzCkD,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAG,CAAC;IAErD,CAAC;IAEDO,SAAS,EAAE,SAAAA,CAAWP,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAE/B,MAAMC,GAAG,GAAG,IAAI,CAAChD,OAAO;MACxB,MAAMiD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACZ,OAAO;MAExCiD,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAG,CAAC;MACpDI,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAE,EAAEE,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAE,EAAEE,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAG,CAAC;MACpDG,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAED,CAAC,GAAG,CAAC,CAAE,EAAEC,GAAG,CAAED,CAAC,GAAG,CAAC,CAAE,EAAEC,GAAG,CAAED,CAAC,GAAG,CAAC,CAAG,CAAC;IAErD,CAAC;IAEDM,aAAa,EAAE,SAAAA,CAAWR,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAEnC,MAAMC,GAAG,GAAG,IAAI,CAACjD,QAAQ;MACzB,MAAMkD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACZ,OAAO;MAExCV,GAAG,CAACgE,SAAS,CAAEN,GAAG,EAAEH,CAAE,CAAC;MACvBtD,GAAG,CAAC+D,SAAS,CAAEN,GAAG,EAAEF,CAAE,CAAC;MACvBtD,GAAG,CAAC8D,SAAS,CAAEN,GAAG,EAAED,CAAE,CAAC;MAEvBrD,GAAG,CAAC6D,UAAU,CAAE/D,GAAG,EAAED,GAAI,CAAC;MAC1BE,GAAG,CAAC8D,UAAU,CAAEjE,GAAG,EAAEC,GAAI,CAAC;MAC1BG,GAAG,CAAC8D,KAAK,CAAE/D,GAAI,CAAC;MAEhBC,GAAG,CAAC+D,SAAS,CAAC,CAAC;MAEfR,GAAG,CAACjB,IAAI,CAAEtC,GAAG,CAACgE,CAAC,EAAEhE,GAAG,CAACiE,CAAC,EAAEjE,GAAG,CAACkE,CAAE,CAAC;MAC/BX,GAAG,CAACjB,IAAI,CAAEtC,GAAG,CAACgE,CAAC,EAAEhE,GAAG,CAACiE,CAAC,EAAEjE,GAAG,CAACkE,CAAE,CAAC;MAC/BX,GAAG,CAACjB,IAAI,CAAEtC,GAAG,CAACgE,CAAC,EAAEhE,GAAG,CAACiE,CAAC,EAAEjE,GAAG,CAACkE,CAAE,CAAC;IAEhC,CAAC;IAEDC,QAAQ,EAAE,SAAAA,CAAWhB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAE9B,MAAMC,GAAG,GAAG,IAAI,CAAC/C,MAAM;MACvB,MAAMgD,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACX,MAAM;MAEvC,IAAK+C,GAAG,CAAEH,CAAC,CAAE,KAAKnC,SAAS,EAAGuC,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAG,CAAC;MAClF,IAAKG,GAAG,CAAEF,CAAC,CAAE,KAAKpC,SAAS,EAAGuC,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAE,EAAEE,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAE,EAAEE,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAG,CAAC;MAClF,IAAKE,GAAG,CAAED,CAAC,CAAE,KAAKrC,SAAS,EAAGuC,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAED,CAAC,GAAG,CAAC,CAAE,EAAEC,GAAG,CAAED,CAAC,GAAG,CAAC,CAAE,EAAEC,GAAG,CAAED,CAAC,GAAG,CAAC,CAAG,CAAC;IAEnF,CAAC;IAEDe,KAAK,EAAE,SAAAA,CAAWjB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;MAE3B,MAAMC,GAAG,GAAG,IAAI,CAAC9C,GAAG;MACpB,MAAM+C,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACV,GAAG;MAEpC+C,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAG,CAAC;MACtCI,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAE,EAAEE,GAAG,CAAEF,CAAC,GAAG,CAAC,CAAG,CAAC;MACtCG,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAED,CAAC,GAAG,CAAC,CAAE,EAAEC,GAAG,CAAED,CAAC,GAAG,CAAC,CAAG,CAAC;IAEvC,CAAC;IAEDgB,YAAY,EAAE,SAAAA,CAAA,EAAY;MAEzB,MAAMd,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACV,GAAG;MAEpC+C,GAAG,CAACjB,IAAI,CAAE,CAAC,EAAE,CAAE,CAAC;MAChBiB,GAAG,CAACjB,IAAI,CAAE,CAAC,EAAE,CAAE,CAAC;MAChBiB,GAAG,CAACjB,IAAI,CAAE,CAAC,EAAE,CAAE,CAAC;IAEjB,CAAC;IAEDgC,SAAS,EAAE,SAAAA,CAAWnB,CAAC,EAAG;MAEzB,MAAMG,GAAG,GAAG,IAAI,CAAC9C,GAAG;MACpB,MAAM+C,GAAG,GAAG,IAAI,CAACnD,MAAM,CAACc,QAAQ,CAACV,GAAG;MAEpC+C,GAAG,CAACjB,IAAI,CAAEgB,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAE,EAAEG,GAAG,CAAEH,CAAC,GAAG,CAAC,CAAG,CAAC;IAEvC,CAAC;IAEDoB,OAAO,EAAE,SAAAA,CAAWpB,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEmB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAG;MAErD,MAAMC,IAAI,GAAG,IAAI,CAACzE,QAAQ,CAACwB,MAAM;MAEjC,IAAIkD,EAAE,GAAG,IAAI,CAACnC,gBAAgB,CAAEO,CAAC,EAAE2B,IAAK,CAAC;MACzC,IAAIE,EAAE,GAAG,IAAI,CAACpC,gBAAgB,CAAEQ,CAAC,EAAE0B,IAAK,CAAC;MACzC,IAAIG,EAAE,GAAG,IAAI,CAACrC,gBAAgB,CAAES,CAAC,EAAEyB,IAAK,CAAC;MAEzC,IAAI,CAAC5B,SAAS,CAAE6B,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC;MAC5B,IAAI,CAACd,QAAQ,CAAEY,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC;;MAE3B;;MAEA,IAAKN,EAAE,KAAK3D,SAAS,IAAI2D,EAAE,KAAK,EAAE,EAAG;QAEpC,MAAMO,IAAI,GAAG,IAAI,CAAC5E,OAAO,CAACuB,MAAM;QAEhCkD,EAAE,GAAG,IAAI,CAAC/B,gBAAgB,CAAE2B,EAAE,EAAEO,IAAK,CAAC;QACtCF,EAAE,GAAG,IAAI,CAAChC,gBAAgB,CAAE4B,EAAE,EAAEM,IAAK,CAAC;QACtCD,EAAE,GAAG,IAAI,CAACjC,gBAAgB,CAAE6B,EAAE,EAAEK,IAAK,CAAC;QAEtC,IAAI,CAACxB,SAAS,CAAEqB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC;MAE7B,CAAC,MAAM;QAEN,IAAI,CAACtB,aAAa,CAAEoB,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC;MAEjC;;MAEA;;MAEA,IAAKT,EAAE,KAAKxD,SAAS,IAAIwD,EAAE,KAAK,EAAE,EAAG;QAEpC,MAAMW,KAAK,GAAG,IAAI,CAAC3E,GAAG,CAACqB,MAAM;QAE7BkD,EAAE,GAAG,IAAI,CAAC9B,YAAY,CAAEuB,EAAE,EAAEW,KAAM,CAAC;QACnCH,EAAE,GAAG,IAAI,CAAC/B,YAAY,CAAEwB,EAAE,EAAEU,KAAM,CAAC;QACnCF,EAAE,GAAG,IAAI,CAAChC,YAAY,CAAEyB,EAAE,EAAES,KAAM,CAAC;QAEnC,IAAI,CAACf,KAAK,CAAEW,EAAE,EAAEC,EAAE,EAAEC,EAAG,CAAC;QAExB,IAAI,CAAC7E,MAAM,CAACc,QAAQ,CAACC,YAAY,GAAG,IAAI;MAEzC,CAAC,MAAM;QAEN;;QAEA,IAAI,CAACkD,YAAY,CAAC,CAAC;MAEpB;IAED,CAAC;IAEDe,gBAAgB,EAAE,SAAAA,CAAW/E,QAAQ,EAAG;MAEvC,IAAI,CAACD,MAAM,CAACc,QAAQ,CAACmE,IAAI,GAAG,QAAQ;MAEpC,MAAMP,IAAI,GAAG,IAAI,CAACzE,QAAQ,CAACwB,MAAM;MAEjC,KAAM,IAAIyD,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAGlF,QAAQ,CAACwB,MAAM,EAAEyD,EAAE,GAAGC,CAAC,EAAED,EAAE,EAAG,EAAG;QAEtD,MAAM3D,KAAK,GAAG,IAAI,CAACiB,gBAAgB,CAAEvC,QAAQ,CAAEiF,EAAE,CAAE,EAAER,IAAK,CAAC;QAE3D,IAAI,CAACtB,cAAc,CAAE7B,KAAM,CAAC;QAC5B,IAAI,CAACwC,QAAQ,CAAExC,KAAM,CAAC;MAEvB;IAED,CAAC;IAED6D,eAAe,EAAE,SAAAA,CAAWnF,QAAQ,EAAEG,GAAG,EAAG;MAE3C,IAAI,CAACJ,MAAM,CAACc,QAAQ,CAACmE,IAAI,GAAG,MAAM;MAElC,MAAMP,IAAI,GAAG,IAAI,CAACzE,QAAQ,CAACwB,MAAM;MACjC,MAAMsD,KAAK,GAAG,IAAI,CAAC3E,GAAG,CAACqB,MAAM;MAE7B,KAAM,IAAIyD,EAAE,GAAG,CAAC,EAAEC,CAAC,GAAGlF,QAAQ,CAACwB,MAAM,EAAEyD,EAAE,GAAGC,CAAC,EAAED,EAAE,EAAG,EAAG;QAEtD,IAAI,CAAC7B,aAAa,CAAE,IAAI,CAACb,gBAAgB,CAAEvC,QAAQ,CAAEiF,EAAE,CAAE,EAAER,IAAK,CAAE,CAAC;MAEpE;MAEA,KAAM,IAAIW,GAAG,GAAG,CAAC,EAAEF,CAAC,GAAG/E,GAAG,CAACqB,MAAM,EAAE4D,GAAG,GAAGF,CAAC,EAAEE,GAAG,EAAG,EAAG;QAEpD,IAAI,CAACnB,SAAS,CAAE,IAAI,CAACrB,YAAY,CAAEzC,GAAG,CAAEiF,GAAG,CAAE,EAAEN,KAAM,CAAE,CAAC;MAEzD;IAED;EAED,CAAC;EAEDjF,KAAK,CAACS,WAAW,CAAE,EAAE,EAAE,KAAM,CAAC;EAE9B,OAAOT,KAAK;AAEb;;AAEA;;AAEA,MAAMwF,SAAS,SAASzG,MAAM,CAAC;EAE9B0G,WAAWA,CAAEC,OAAO,EAAG;IAEtB,KAAK,CAAEA,OAAQ,CAAC;IAEhB,IAAI,CAACnF,SAAS,GAAG,IAAI;EAEtB;EAEAoF,IAAIA,CAAEC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;IAExC,MAAMC,KAAK,GAAG,IAAI;IAElB,MAAMC,MAAM,GAAG,IAAIvH,UAAU,CAAE,IAAI,CAACgH,OAAQ,CAAC;IAC7CO,MAAM,CAACC,OAAO,CAAE,IAAI,CAACC,IAAK,CAAC;IAC3BF,MAAM,CAACG,gBAAgB,CAAE,IAAI,CAACC,aAAc,CAAC;IAC7CJ,MAAM,CAACK,kBAAkB,CAAE,IAAI,CAACC,eAAgB,CAAC;IACjDN,MAAM,CAACN,IAAI,CAAEC,GAAG,EAAE,UAAWY,IAAI,EAAG;MAEnC,IAAI;QAEHX,MAAM,CAAEG,KAAK,CAACS,KAAK,CAAED,IAAK,CAAE,CAAC;MAE9B,CAAC,CAAC,OAAQE,CAAC,EAAG;QAEb,IAAKX,OAAO,EAAG;UAEdA,OAAO,CAAEW,CAAE,CAAC;QAEb,CAAC,MAAM;UAENC,OAAO,CAACC,KAAK,CAAEF,CAAE,CAAC;QAEnB;QAEAV,KAAK,CAACN,OAAO,CAACmB,SAAS,CAAEjB,GAAI,CAAC;MAE/B;IAED,CAAC,EAAEE,UAAU,EAAEC,OAAQ,CAAC;EAEzB;EAEAe,YAAYA,CAAEvG,SAAS,EAAG;IAEzB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAE1B,OAAO,IAAI;EAEZ;EAEAkG,KAAKA,CAAED,IAAI,EAAG;IAEb,MAAMxG,KAAK,GAAG,IAAID,WAAW,CAAC,CAAC;IAE/B,IAAKyG,IAAI,CAACO,OAAO,CAAE,MAAO,CAAC,KAAK,CAAE,CAAC,EAAG;MAErC;MACAP,IAAI,GAAGA,IAAI,CAACQ,OAAO,CAAE,OAAO,EAAE,IAAK,CAAC;IAErC;IAEA,IAAKR,IAAI,CAACO,OAAO,CAAE,MAAO,CAAC,KAAK,CAAE,CAAC,EAAG;MAErC;MACAP,IAAI,GAAGA,IAAI,CAACQ,OAAO,CAAE,OAAO,EAAE,EAAG,CAAC;IAEnC;IAEA,MAAMC,KAAK,GAAGT,IAAI,CAACU,KAAK,CAAE,IAAK,CAAC;IAChC,IAAIC,IAAI,GAAG,EAAE;MAAEC,aAAa,GAAG,EAAE;IACjC,IAAIC,UAAU,GAAG,CAAC;IAClB,IAAIC,MAAM,GAAG,EAAE;;IAEf;IACA,MAAMC,QAAQ,GAAK,OAAO,EAAE,CAACA,QAAQ,KAAK,UAAY;IAEtD,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEnC,CAAC,GAAG4B,KAAK,CAACtF,MAAM,EAAE6F,CAAC,GAAGnC,CAAC,EAAEmC,CAAC,EAAG,EAAG;MAEhDL,IAAI,GAAGF,KAAK,CAAEO,CAAC,CAAE;MAEjBL,IAAI,GAAGI,QAAQ,GAAGJ,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAGJ,IAAI,CAACM,IAAI,CAAC,CAAC;MAE/CJ,UAAU,GAAGF,IAAI,CAACxF,MAAM;MAExB,IAAK0F,UAAU,KAAK,CAAC,EAAG;MAExBD,aAAa,GAAGD,IAAI,CAACO,MAAM,CAAE,CAAE,CAAC;;MAEhC;MACA,IAAKN,aAAa,KAAK,GAAG,EAAG;MAE7B,IAAKA,aAAa,KAAK,GAAG,EAAG;QAE5B,MAAMO,IAAI,GAAGR,IAAI,CAACD,KAAK,CAAE,KAAM,CAAC;QAEhC,QAASS,IAAI,CAAE,CAAC,CAAE;UAEjB,KAAK,GAAG;YACP3H,KAAK,CAACG,QAAQ,CAACiC,IAAI,CAClBwF,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAAC,EACvBC,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAAC,EACvBC,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CACvB,CAAC;YACD,IAAKA,IAAI,CAAChG,MAAM,IAAI,CAAC,EAAG;cAEvB3B,KAAK,CAACK,MAAM,CAAC+B,IAAI,CAChBwF,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAAC,EACvBC,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAAC,EACvBC,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAEvB,CAAC;YAEF,CAAC,MAAM;cAEN;;cAEA3H,KAAK,CAACK,MAAM,CAAC+B,IAAI,CAAEtB,SAAS,EAAEA,SAAS,EAAEA,SAAU,CAAC;YAErD;YAEA;UACD,KAAK,IAAI;YACRd,KAAK,CAACI,OAAO,CAACgC,IAAI,CACjBwF,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAAC,EACvBC,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAAC,EACvBC,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CACvB,CAAC;YACD;UACD,KAAK,IAAI;YACR3H,KAAK,CAACM,GAAG,CAAC8B,IAAI,CACbwF,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CAAC,EACvBC,UAAU,CAAED,IAAI,CAAE,CAAC,CAAG,CACvB,CAAC;YACD;QAEF;MAED,CAAC,MAAM,IAAKP,aAAa,KAAK,GAAG,EAAG;QAEnC,MAAMS,QAAQ,GAAGV,IAAI,CAACW,MAAM,CAAE,CAAE,CAAC,CAACL,IAAI,CAAC,CAAC;QACxC,MAAMM,UAAU,GAAGF,QAAQ,CAACX,KAAK,CAAE,KAAM,CAAC;QAC1C,MAAMc,YAAY,GAAG,EAAE;;QAEvB;;QAEA,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGH,UAAU,CAACpG,MAAM,EAAEsG,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;UAEvD,MAAME,MAAM,GAAGJ,UAAU,CAAEE,CAAC,CAAE;UAE9B,IAAKE,MAAM,CAACxG,MAAM,GAAG,CAAC,EAAG;YAExB,MAAMyG,WAAW,GAAGD,MAAM,CAACjB,KAAK,CAAE,GAAI,CAAC;YACvCc,YAAY,CAAC5F,IAAI,CAAEgG,WAAY,CAAC;UAEjC;QAED;;QAEA;;QAEA,MAAMC,EAAE,GAAGL,YAAY,CAAE,CAAC,CAAE;QAE5B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGF,YAAY,CAACrG,MAAM,GAAG,CAAC,EAAEsG,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;UAE7D,MAAMK,EAAE,GAAGN,YAAY,CAAEC,CAAC,CAAE;UAC5B,MAAMM,EAAE,GAAGP,YAAY,CAAEC,CAAC,GAAG,CAAC,CAAE;UAEhCjI,KAAK,CAACqE,OAAO,CACZgE,EAAE,CAAE,CAAC,CAAE,EAAEC,EAAE,CAAE,CAAC,CAAE,EAAEC,EAAE,CAAE,CAAC,CAAE,EACzBF,EAAE,CAAE,CAAC,CAAE,EAAEC,EAAE,CAAE,CAAC,CAAE,EAAEC,EAAE,CAAE,CAAC,CAAE,EACzBF,EAAE,CAAE,CAAC,CAAE,EAAEC,EAAE,CAAE,CAAC,CAAE,EAAEC,EAAE,CAAE,CAAC,CACxB,CAAC;QAEF;MAED,CAAC,MAAM,IAAKnB,aAAa,KAAK,GAAG,EAAG;QAEnC,MAAMoB,SAAS,GAAGrB,IAAI,CAACsB,SAAS,CAAE,CAAE,CAAC,CAAChB,IAAI,CAAC,CAAC,CAACP,KAAK,CAAE,GAAI,CAAC;QACzD,IAAIwB,YAAY,GAAG,EAAE;QACrB,MAAMC,OAAO,GAAG,EAAE;QAElB,IAAKxB,IAAI,CAACJ,OAAO,CAAE,GAAI,CAAC,KAAK,CAAE,CAAC,EAAG;UAElC2B,YAAY,GAAGF,SAAS;QAEzB,CAAC,MAAM;UAEN,KAAM,IAAII,EAAE,GAAG,CAAC,EAAEC,IAAI,GAAGL,SAAS,CAAC7G,MAAM,EAAEiH,EAAE,GAAGC,IAAI,EAAED,EAAE,EAAG,EAAG;YAE7D,MAAME,KAAK,GAAGN,SAAS,CAAEI,EAAE,CAAE,CAAC1B,KAAK,CAAE,GAAI,CAAC;YAE1C,IAAK4B,KAAK,CAAE,CAAC,CAAE,KAAK,EAAE,EAAGJ,YAAY,CAACtG,IAAI,CAAE0G,KAAK,CAAE,CAAC,CAAG,CAAC;YACxD,IAAKA,KAAK,CAAE,CAAC,CAAE,KAAK,EAAE,EAAGH,OAAO,CAACvG,IAAI,CAAE0G,KAAK,CAAE,CAAC,CAAG,CAAC;UAEpD;QAED;QAEA9I,KAAK,CAACsF,eAAe,CAAEoD,YAAY,EAAEC,OAAQ,CAAC;MAE/C,CAAC,MAAM,IAAKvB,aAAa,KAAK,GAAG,EAAG;QAEnC,MAAMS,QAAQ,GAAGV,IAAI,CAACW,MAAM,CAAE,CAAE,CAAC,CAACL,IAAI,CAAC,CAAC;QACxC,MAAMsB,SAAS,GAAGlB,QAAQ,CAACX,KAAK,CAAE,GAAI,CAAC;QAEvClH,KAAK,CAACkF,gBAAgB,CAAE6D,SAAU,CAAC;MAEpC,CAAC,MAAM,IAAK,CAAEzB,MAAM,GAAGhI,eAAe,CAAC0J,IAAI,CAAE7B,IAAK,CAAC,MAAO,IAAI,EAAG;QAEhE;QACA;QACA;;QAEA;QACA;QACA,MAAMzG,IAAI,GAAG,CAAE,GAAG,GAAG4G,MAAM,CAAE,CAAC,CAAE,CAACQ,MAAM,CAAE,CAAE,CAAC,CAACL,IAAI,CAAC,CAAC,EAAGK,MAAM,CAAE,CAAE,CAAC;QAEjE9H,KAAK,CAACS,WAAW,CAAEC,IAAK,CAAC;MAE1B,CAAC,MAAM,IAAKlB,qBAAqB,CAACyJ,IAAI,CAAE9B,IAAK,CAAC,EAAG;QAEhD;;QAEAnH,KAAK,CAACE,MAAM,CAACiB,aAAa,CAAEgG,IAAI,CAACsB,SAAS,CAAE,CAAE,CAAC,CAAChB,IAAI,CAAC,CAAC,EAAEzH,KAAK,CAACQ,iBAAkB,CAAC;MAElF,CAAC,MAAM,IAAKjB,yBAAyB,CAAC0J,IAAI,CAAE9B,IAAK,CAAC,EAAG;QAEpD;;QAEAnH,KAAK,CAACQ,iBAAiB,CAAC4B,IAAI,CAAE+E,IAAI,CAACsB,SAAS,CAAE,CAAE,CAAC,CAAChB,IAAI,CAAC,CAAE,CAAC;MAE3D,CAAC,MAAM,IAAKhI,gBAAgB,CAACwJ,IAAI,CAAE9B,IAAK,CAAC,EAAG;QAE3C;QACA;;QAEAR,OAAO,CAACuC,IAAI,CAAE,sGAAuG,CAAC;MAEvH,CAAC,MAAM,IAAK9B,aAAa,KAAK,GAAG,EAAG;QAEnCE,MAAM,GAAGH,IAAI,CAACD,KAAK,CAAE,GAAI,CAAC;;QAE1B;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACI,IAAKI,MAAM,CAAC3F,MAAM,GAAG,CAAC,EAAG;UAExB,MAAMgB,KAAK,GAAG2E,MAAM,CAAE,CAAC,CAAE,CAACG,IAAI,CAAC,CAAC,CAAC0B,WAAW,CAAC,CAAC;UAC9CnJ,KAAK,CAACE,MAAM,CAACgB,MAAM,GAAKyB,KAAK,KAAK,GAAG,IAAIA,KAAK,KAAK,KAAO;QAE3D,CAAC,MAAM;UAEN;UACA3C,KAAK,CAACE,MAAM,CAACgB,MAAM,GAAG,IAAI;QAE3B;QAEA,MAAMQ,QAAQ,GAAG1B,KAAK,CAACE,MAAM,CAACW,eAAe,CAAC,CAAC;QAC/C,IAAKa,QAAQ,EAAGA,QAAQ,CAACR,MAAM,GAAGlB,KAAK,CAACE,MAAM,CAACgB,MAAM;MAEtD,CAAC,MAAM;QAEN;QACA,IAAKiG,IAAI,KAAK,IAAI,EAAG;QAErBR,OAAO,CAACuC,IAAI,CAAE,qCAAqC,GAAG/B,IAAI,GAAG,GAAI,CAAC;MAEnE;IAED;IAEAnH,KAAK,CAACyC,QAAQ,CAAC,CAAC;IAEhB,MAAM2G,SAAS,GAAG,IAAIxK,KAAK,CAAC,CAAC;IAC7BwK,SAAS,CAAC5I,iBAAiB,GAAG,EAAE,CAAC6I,MAAM,CAAErJ,KAAK,CAACQ,iBAAkB,CAAC;IAElE,MAAM8I,aAAa,GAAG,EAAItJ,KAAK,CAACC,OAAO,CAAC0B,MAAM,KAAK,CAAC,IAAI3B,KAAK,CAACC,OAAO,CAAE,CAAC,CAAE,CAACe,QAAQ,CAACb,QAAQ,CAACwB,MAAM,KAAK,CAAC,CAAE;IAE3G,IAAK2H,aAAa,KAAK,IAAI,EAAG;MAE7B,KAAM,IAAI9B,CAAC,GAAG,CAAC,EAAEnC,CAAC,GAAGrF,KAAK,CAACC,OAAO,CAAC0B,MAAM,EAAE6F,CAAC,GAAGnC,CAAC,EAAEmC,CAAC,EAAG,EAAG;QAExD,MAAMtH,MAAM,GAAGF,KAAK,CAACC,OAAO,CAAEuH,CAAC,CAAE;QACjC,MAAMxG,QAAQ,GAAGd,MAAM,CAACc,QAAQ;QAChC,MAAMT,SAAS,GAAGL,MAAM,CAACK,SAAS;QAClC,MAAMgJ,MAAM,GAAKvI,QAAQ,CAACmE,IAAI,KAAK,MAAQ;QAC3C,MAAMqE,QAAQ,GAAKxI,QAAQ,CAACmE,IAAI,KAAK,QAAU;QAC/C,IAAIsE,eAAe,GAAG,KAAK;;QAE3B;QACA,IAAKzI,QAAQ,CAACb,QAAQ,CAACwB,MAAM,KAAK,CAAC,EAAG;QAEtC,MAAM+H,cAAc,GAAG,IAAIjL,cAAc,CAAC,CAAC;QAE3CiL,cAAc,CAACC,YAAY,CAAE,UAAU,EAAE,IAAIhL,sBAAsB,CAAEqC,QAAQ,CAACb,QAAQ,EAAE,CAAE,CAAE,CAAC;QAE7F,IAAKa,QAAQ,CAACZ,OAAO,CAACuB,MAAM,GAAG,CAAC,EAAG;UAElC+H,cAAc,CAACC,YAAY,CAAE,QAAQ,EAAE,IAAIhL,sBAAsB,CAAEqC,QAAQ,CAACZ,OAAO,EAAE,CAAE,CAAE,CAAC;QAE3F;QAEA,IAAKY,QAAQ,CAACX,MAAM,CAACsB,MAAM,GAAG,CAAC,EAAG;UAEjC8H,eAAe,GAAG,IAAI;UACtBC,cAAc,CAACC,YAAY,CAAE,OAAO,EAAE,IAAIhL,sBAAsB,CAAEqC,QAAQ,CAACX,MAAM,EAAE,CAAE,CAAE,CAAC;QAEzF;QAEA,IAAKW,QAAQ,CAACC,YAAY,KAAK,IAAI,EAAG;UAErCyI,cAAc,CAACC,YAAY,CAAE,IAAI,EAAE,IAAIhL,sBAAsB,CAAEqC,QAAQ,CAACV,GAAG,EAAE,CAAE,CAAE,CAAC;QAEnF;;QAEA;;QAEA,MAAMsJ,gBAAgB,GAAG,EAAE;QAE3B,KAAM,IAAIrH,EAAE,GAAG,CAAC,EAAEsH,KAAK,GAAGtJ,SAAS,CAACoB,MAAM,EAAEY,EAAE,GAAGsH,KAAK,EAAEtH,EAAE,EAAG,EAAG;UAE/D,MAAMuH,cAAc,GAAGvJ,SAAS,CAAEgC,EAAE,CAAE;UACtC,MAAMwH,YAAY,GAAGD,cAAc,CAACpJ,IAAI,GAAG,GAAG,GAAGoJ,cAAc,CAAC5I,MAAM,GAAG,GAAG,GAAGuI,eAAe;UAC9F,IAAI/H,QAAQ,GAAG1B,KAAK,CAACO,SAAS,CAAEwJ,YAAY,CAAE;UAE9C,IAAK,IAAI,CAACxJ,SAAS,KAAK,IAAI,EAAG;YAE9BmB,QAAQ,GAAG,IAAI,CAACnB,SAAS,CAACyJ,MAAM,CAAEF,cAAc,CAACpJ,IAAK,CAAC;;YAEvD;YACA,IAAK6I,MAAM,IAAI7H,QAAQ,IAAI,EAAIA,QAAQ,YAAY7C,iBAAiB,CAAE,EAAG;cAExE,MAAMoL,YAAY,GAAG,IAAIpL,iBAAiB,CAAC,CAAC;cAC5CG,QAAQ,CAACkL,SAAS,CAACC,IAAI,CAACC,IAAI,CAAEH,YAAY,EAAEvI,QAAS,CAAC;cACtDuI,YAAY,CAACI,KAAK,CAACF,IAAI,CAAEzI,QAAQ,CAAC2I,KAAM,CAAC;cACzC3I,QAAQ,GAAGuI,YAAY;YAExB,CAAC,MAAM,IAAKT,QAAQ,IAAI9H,QAAQ,IAAI,EAAIA,QAAQ,YAAYtC,cAAc,CAAE,EAAG;cAE9E,MAAMkL,cAAc,GAAG,IAAIlL,cAAc,CAAE;gBAAEmL,IAAI,EAAE,EAAE;gBAAEC,eAAe,EAAE;cAAM,CAAE,CAAC;cACjFxL,QAAQ,CAACkL,SAAS,CAACC,IAAI,CAACC,IAAI,CAAEE,cAAc,EAAE5I,QAAS,CAAC;cACxD4I,cAAc,CAACD,KAAK,CAACF,IAAI,CAAEzI,QAAQ,CAAC2I,KAAM,CAAC;cAC3CC,cAAc,CAACG,GAAG,GAAG/I,QAAQ,CAAC+I,GAAG;cACjC/I,QAAQ,GAAG4I,cAAc;YAE1B;UAED;UAEA,IAAK5I,QAAQ,KAAKZ,SAAS,EAAG;YAE7B,IAAKyI,MAAM,EAAG;cAEb7H,QAAQ,GAAG,IAAI7C,iBAAiB,CAAC,CAAC;YAEnC,CAAC,MAAM,IAAK2K,QAAQ,EAAG;cAEtB9H,QAAQ,GAAG,IAAItC,cAAc,CAAE;gBAAEmL,IAAI,EAAE,CAAC;gBAAEC,eAAe,EAAE;cAAM,CAAE,CAAC;YAErE,CAAC,MAAM;cAEN9I,QAAQ,GAAG,IAAIxC,iBAAiB,CAAC,CAAC;YAEnC;YAEAwC,QAAQ,CAAChB,IAAI,GAAGoJ,cAAc,CAACpJ,IAAI;YACnCgB,QAAQ,CAACgJ,WAAW,GAAGZ,cAAc,CAAC5I,MAAM,GAAG,KAAK,GAAG,IAAI;YAC3DQ,QAAQ,CAACiJ,YAAY,GAAGlB,eAAe;YAEvCzJ,KAAK,CAACO,SAAS,CAAEwJ,YAAY,CAAE,GAAGrI,QAAQ;UAE3C;UAEAkI,gBAAgB,CAACxH,IAAI,CAAEV,QAAS,CAAC;QAElC;;QAEA;;QAEA,IAAIkJ,IAAI;QAER,IAAKhB,gBAAgB,CAACjI,MAAM,GAAG,CAAC,EAAG;UAElC,KAAM,IAAIY,EAAE,GAAG,CAAC,EAAEsH,KAAK,GAAGtJ,SAAS,CAACoB,MAAM,EAAEY,EAAE,GAAGsH,KAAK,EAAEtH,EAAE,EAAG,EAAG;YAE/D,MAAMuH,cAAc,GAAGvJ,SAAS,CAAEgC,EAAE,CAAE;YACtCmH,cAAc,CAACmB,QAAQ,CAAEf,cAAc,CAAC/H,UAAU,EAAE+H,cAAc,CAACvI,UAAU,EAAEgB,EAAG,CAAC;UAEpF;UAEA,IAAKgH,MAAM,EAAG;YAEbqB,IAAI,GAAG,IAAI9L,YAAY,CAAE4K,cAAc,EAAEE,gBAAiB,CAAC;UAE5D,CAAC,MAAM,IAAKJ,QAAQ,EAAG;YAEtBoB,IAAI,GAAG,IAAIzL,MAAM,CAAEuK,cAAc,EAAEE,gBAAiB,CAAC;UAEtD,CAAC,MAAM;YAENgB,IAAI,GAAG,IAAI3L,IAAI,CAAEyK,cAAc,EAAEE,gBAAiB,CAAC;UAEpD;QAED,CAAC,MAAM;UAEN,IAAKL,MAAM,EAAG;YAEbqB,IAAI,GAAG,IAAI9L,YAAY,CAAE4K,cAAc,EAAEE,gBAAgB,CAAE,CAAC,CAAG,CAAC;UAEjE,CAAC,MAAM,IAAKJ,QAAQ,EAAG;YAEtBoB,IAAI,GAAG,IAAIzL,MAAM,CAAEuK,cAAc,EAAEE,gBAAgB,CAAE,CAAC,CAAG,CAAC;UAE3D,CAAC,MAAM;YAENgB,IAAI,GAAG,IAAI3L,IAAI,CAAEyK,cAAc,EAAEE,gBAAgB,CAAE,CAAC,CAAG,CAAC;UAEzD;QAED;QAEAgB,IAAI,CAAClK,IAAI,GAAGR,MAAM,CAACQ,IAAI;QAEvB0I,SAAS,CAAC0B,GAAG,CAAEF,IAAK,CAAC;MAEtB;IAED,CAAC,MAAM;MAEN;;MAEA,IAAK5K,KAAK,CAACG,QAAQ,CAACwB,MAAM,GAAG,CAAC,EAAG;QAEhC,MAAMD,QAAQ,GAAG,IAAItC,cAAc,CAAE;UAAEmL,IAAI,EAAE,CAAC;UAAEC,eAAe,EAAE;QAAM,CAAE,CAAC;QAE1E,MAAMd,cAAc,GAAG,IAAIjL,cAAc,CAAC,CAAC;QAE3CiL,cAAc,CAACC,YAAY,CAAE,UAAU,EAAE,IAAIhL,sBAAsB,CAAEqB,KAAK,CAACG,QAAQ,EAAE,CAAE,CAAE,CAAC;QAE1F,IAAKH,KAAK,CAACK,MAAM,CAACsB,MAAM,GAAG,CAAC,IAAI3B,KAAK,CAACK,MAAM,CAAE,CAAC,CAAE,KAAKS,SAAS,EAAG;UAEjE4I,cAAc,CAACC,YAAY,CAAE,OAAO,EAAE,IAAIhL,sBAAsB,CAAEqB,KAAK,CAACK,MAAM,EAAE,CAAE,CAAE,CAAC;UACrFqB,QAAQ,CAACiJ,YAAY,GAAG,IAAI;QAE7B;QAEA,MAAMI,MAAM,GAAG,IAAI5L,MAAM,CAAEuK,cAAc,EAAEhI,QAAS,CAAC;QACrD0H,SAAS,CAAC0B,GAAG,CAAEC,MAAO,CAAC;MAExB;IAED;IAEA,OAAO3B,SAAS;EAEjB;AAED;AAEA,SAAS5D,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}