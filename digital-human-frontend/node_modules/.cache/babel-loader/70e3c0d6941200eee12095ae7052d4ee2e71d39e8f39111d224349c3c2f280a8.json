{"ast":null,"code":"var _jsxFileName = \"/Users/chenyangdu/Desktop/SCU/\\u627E\\u5DE5/\\u8054\\u60F3/untitled folder/digital-human/digital-human/digital-human/digital-human-frontend/src/VoiceInput.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const VoiceInput = ({ onInput }) => {\n//   const [isListening, setIsListening] = useState(false);\n//   const [recognition, setRecognition] = useState(null);\n\n//   useEffect(() => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       console.error(\"Web Speech API is not supported by this browser.\");\n//       return;\n//     }\n\n//     const speechRecognition = new window.webkitSpeechRecognition();\n//     speechRecognition.continuous = false;\n//     speechRecognition.interimResults = false;\n//     speechRecognition.lang = 'en-US';\n\n//     speechRecognition.onstart = () => setIsListening(true);\n//     speechRecognition.onend = () => setIsListening(false);\n//     speechRecognition.onerror = (event) => console.error(event);\n//     speechRecognition.onresult = (event) => {\n//       const transcript = event.results[0][0].transcript;\n//       onInput(transcript);\n//     };\n\n//     setRecognition(speechRecognition);\n//   }, [onInput]);\n\n//   const startListening = () => {\n//     if (recognition) recognition.start();\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={startListening}>\n//         {isListening ? 'Listening...' : 'Start Voice Input'}\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default VoiceInput;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onInput\n}) => {\n  _s();\n  const recognition = useRef(null);\n  const [isListening, setIsListening] = useState(false);\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window) {\n      recognition.current = new window.webkitSpeechRecognition();\n      recognition.current.continuous = true;\n      recognition.current.interimResults = true;\n      recognition.current.lang = 'zh-CN'; // 设置语言为中文\n\n      recognition.current.onresult = event => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        if (finalTranscript) {\n          onInput(finalTranscript);\n        }\n      };\n      recognition.current.onerror = event => {\n        console.error('Speech recognition error', event);\n        if (event.error === 'not-allowed' || event.error === 'service-not-allowed') {\n          alert('麦克风访问被拒绝或服务不可用');\n        }\n      };\n      recognition.current.onend = () => {\n        if (isListening) {\n          recognition.current.start(); // 重新启动语音识别\n        }\n      };\n    } else {\n      alert('您的浏览器不支持语音识别功能。');\n    }\n  }, [isListening, onInput]);\n  const startListening = () => {\n    if (recognition.current) {\n      recognition.current.start();\n      setIsListening(true);\n    }\n  };\n  const stopListening = () => {\n    if (recognition.current) {\n      recognition.current.stop();\n      setIsListening(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startListening,\n      disabled: isListening,\n      children: \"Start Voice Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stopListening,\n      disabled: !isListening,\n      children: \"Stop Voice Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"RETXCNIevpTG8XLfx0Bcfej/cHg=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","VoiceInput","onInput","_s","recognition","isListening","setIsListening","window","current","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","transcript","onerror","console","error","alert","onend","start","startListening","stopListening","stop","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chenyangdu/Desktop/SCU/找工/联想/untitled folder/digital-human/digital-human/digital-human/digital-human-frontend/src/VoiceInput.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const VoiceInput = ({ onInput }) => {\n//   const [isListening, setIsListening] = useState(false);\n//   const [recognition, setRecognition] = useState(null);\n\n//   useEffect(() => {\n//     if (!('webkitSpeechRecognition' in window)) {\n//       console.error(\"Web Speech API is not supported by this browser.\");\n//       return;\n//     }\n\n//     const speechRecognition = new window.webkitSpeechRecognition();\n//     speechRecognition.continuous = false;\n//     speechRecognition.interimResults = false;\n//     speechRecognition.lang = 'en-US';\n\n//     speechRecognition.onstart = () => setIsListening(true);\n//     speechRecognition.onend = () => setIsListening(false);\n//     speechRecognition.onerror = (event) => console.error(event);\n//     speechRecognition.onresult = (event) => {\n//       const transcript = event.results[0][0].transcript;\n//       onInput(transcript);\n//     };\n\n//     setRecognition(speechRecognition);\n//   }, [onInput]);\n\n//   const startListening = () => {\n//     if (recognition) recognition.start();\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={startListening}>\n//         {isListening ? 'Listening...' : 'Start Voice Input'}\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default VoiceInput;\n\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst VoiceInput = ({ onInput }) => {\n  const recognition = useRef(null);\n  const [isListening, setIsListening] = useState(false);\n\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window) {\n      recognition.current = new window.webkitSpeechRecognition();\n      recognition.current.continuous = true;\n      recognition.current.interimResults = true;\n      recognition.current.lang = 'zh-CN'; // 设置语言为中文\n\n      recognition.current.onresult = (event) => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        if (finalTranscript) {\n          onInput(finalTranscript);\n        }\n      };\n\n      recognition.current.onerror = (event) => {\n        console.error('Speech recognition error', event);\n        if (event.error === 'not-allowed' || event.error === 'service-not-allowed') {\n          alert('麦克风访问被拒绝或服务不可用');\n        }\n      };\n\n      recognition.current.onend = () => {\n        if (isListening) {\n          recognition.current.start(); // 重新启动语音识别\n        }\n      };\n    } else {\n      alert('您的浏览器不支持语音识别功能。');\n    }\n  }, [isListening, onInput]);\n\n  const startListening = () => {\n    if (recognition.current) {\n      recognition.current.start();\n      setIsListening(true);\n    }\n  };\n\n  const stopListening = () => {\n    if (recognition.current) {\n      recognition.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={startListening} disabled={isListening}>Start Voice Input</button>\n      <button onClick={stopListening} disabled={!isListening}>Stop Voice Input</button>\n    </div>\n  );\n};\n\nexport default VoiceInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}