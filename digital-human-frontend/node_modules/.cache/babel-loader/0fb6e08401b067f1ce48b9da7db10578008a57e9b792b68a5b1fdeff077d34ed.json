{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\h\\\\Downloads\\\\digital-human\\\\digital-human\\\\digital-human\\\\digital-human-frontend\\\\src\\\\DigitalHuman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useThree } from '@react-three/fiber';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DigitalHuman() {\n  _s();\n  window.createImageBitmap = undefined;\n  const {\n    scene,\n    materials,\n    textures,\n    isLoading,\n    error\n  } = useGLTF('/models/untitled.glb', true); // Ensure the second argument is true for loading optimally\n\n  useEffect(() => {\n    if (error) {\n      console.error('Error loading model:', error);\n    }\n    if (isLoading) {\n      console.log('Loading model...');\n    }\n    if (scene) {\n      console.log('Model loaded:', scene);\n      console.log('Materials:', materials);\n      console.log('Textures:', textures);\n    }\n  }, [scene, materials, textures, isLoading, error]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error loading model.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading model...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene,\n    scale: 0.1,\n    position: [0, -1.5, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(DigitalHuman, \"0GSQ927gVeF2WBwQB6GbpGzvfX0=\", false, function () {\n  return [useGLTF];\n});\n_c = DigitalHuman;\nexport default DigitalHuman;\n\n// function DigitalHuman() {\n//   const { scene } = useThree();\n//   const loader = new FBXLoader();\n\n//   useEffect(() => {\n//     loader.load('/models/xiaohei.fbx', (fbx) => {\n//       scene.add(fbx);\n//     });\n//   }, [loader, scene]);\n\n//   return null; // ��Ϊ��ֱ�ӽ�ģ�����ӵ������У����Է��� null ��յ� fragment\n// }\n\n// export default DigitalHuman;\n\n// // import React, { useEffect, useRef } from 'react';\n// // import { useThree } from '@react-three/fiber';\n// // import * as THREE from 'three';\n\n// // function DigitalHuman() {\n// //   const { scene } = useThree();\n// //   const videoRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const video = document.createElement('video');\n// //     video.src = '/models/1.mp4';  // �����滻����� MP4 �ļ�·��\n// //     video.crossOrigin = 'anonymous';\n// //     video.loop = true;  // ������Ƶѭ��\n// //     video.muted = true;  // �����Ҫ���Ծ���\n// //     video.play();  // �Զ�����\n\n// //     const texture = new THREE.VideoTexture(video);\n// //     const geometry = new THREE.PlaneGeometry(20, 20);\n// //     const material = new THREE.MeshBasicMaterial({ map: texture });\n// //     const plane = new THREE.Mesh(geometry, material);\n\n// //     // ����ƽ��ĳߴ��λ��\n// //     plane.scale.set(1, 1, 1);  // ������Ҫ��������\n// //     plane.position.set(0, 0, -5);  // ������Ҫ����λ��\n\n// //     scene.add(plane);\n\n// //     // ��������\n// //     return () => {\n// //       video.pause();\n// //       scene.remove(plane);\n// //       texture.dispose();\n// //     };\n// //   }, [scene]);\n\n// //   return null;\n// // }\n\n// // export default DigitalHuman;\nvar _c;\n$RefreshReg$(_c, \"DigitalHuman\");","map":{"version":3,"names":["React","useEffect","useGLTF","useThree","FBXLoader","jsxDEV","_jsxDEV","DigitalHuman","_s","window","createImageBitmap","undefined","scene","materials","textures","isLoading","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","object","scale","position","_c","$RefreshReg$"],"sources":["C:/Users/h/Downloads/digital-human/digital-human/digital-human/digital-human-frontend/src/DigitalHuman.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { useThree } from '@react-three/fiber';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\n\nfunction DigitalHuman() {\n  window.createImageBitmap = undefined\n  const { scene, materials, textures, isLoading, error } = useGLTF('/models/untitled.glb', true); // Ensure the second argument is true for loading optimally\n\n  useEffect(() => {\n    if (error) {\n      console.error('Error loading model:', error);\n    }\n    if (isLoading) {\n      console.log('Loading model...');\n    }\n    if (scene) {\n      console.log('Model loaded:', scene);\n      console.log('Materials:', materials);\n      console.log('Textures:', textures);\n    }\n  }, [scene, materials, textures, isLoading, error]);\n\n  if (error) {\n    return <p>Error loading model.</p>;\n  }\n  if (isLoading) {\n    return <p>Loading model...</p>;\n  }\n  return <primitive object={scene} scale={0.1} position={[0, -1.5, 0]} />;\n}\n\nexport default DigitalHuman;\n\n\n// function DigitalHuman() {\n//   const { scene } = useThree();\n//   const loader = new FBXLoader();\n\n//   useEffect(() => {\n//     loader.load('/models/xiaohei.fbx', (fbx) => {\n//       scene.add(fbx);\n//     });\n//   }, [loader, scene]);\n\n//   return null; // ��Ϊ��ֱ�ӽ�ģ�����ӵ������У����Է��� null ��յ� fragment\n// }\n\n// export default DigitalHuman;\n\n// // import React, { useEffect, useRef } from 'react';\n// // import { useThree } from '@react-three/fiber';\n// // import * as THREE from 'three';\n\n// // function DigitalHuman() {\n// //   const { scene } = useThree();\n// //   const videoRef = useRef(null);\n\n// //   useEffect(() => {\n// //     const video = document.createElement('video');\n// //     video.src = '/models/1.mp4';  // �����滻����� MP4 �ļ�·��\n// //     video.crossOrigin = 'anonymous';\n// //     video.loop = true;  // ������Ƶѭ��\n// //     video.muted = true;  // �����Ҫ���Ծ���\n// //     video.play();  // �Զ�����\n\n// //     const texture = new THREE.VideoTexture(video);\n// //     const geometry = new THREE.PlaneGeometry(20, 20);\n// //     const material = new THREE.MeshBasicMaterial({ map: texture });\n// //     const plane = new THREE.Mesh(geometry, material);\n\n// //     // ����ƽ��ĳߴ��λ��\n// //     plane.scale.set(1, 1, 1);  // ������Ҫ��������\n// //     plane.position.set(0, 0, -5);  // ������Ҫ����λ��\n\n// //     scene.add(plane);\n\n// //     // ��������\n// //     return () => {\n// //       video.pause();\n// //       scene.remove(plane);\n// //       texture.dispose();\n// //     };\n// //   }, [scene]);\n\n// //   return null;\n// // }\n\n// // export default DigitalHuman;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,SAAS,QAAQ,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtBC,MAAM,CAACC,iBAAiB,GAAGC,SAAS;EACpC,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGd,OAAO,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,CAAC;;EAEhGD,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,EAAE;MACTC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;IACA,IAAID,SAAS,EAAE;MACbE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC;IACA,IAAIN,KAAK,EAAE;MACTK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,KAAK,CAAC;MACnCK,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,SAAS,CAAC;MACpCI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAAC;IACpC;EACF,CAAC,EAAE,CAACF,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,CAAC,CAAC;EAElD,IAAIA,KAAK,EAAE;IACT,oBAAOV,OAAA;MAAAa,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EACA,IAAIR,SAAS,EAAE;IACb,oBAAOT,OAAA;MAAAa,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EACA,oBAAOjB,OAAA;IAAWkB,MAAM,EAAEZ,KAAM;IAACa,KAAK,EAAE,GAAI;IAACC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE;AAACf,EAAA,CAzBQD,YAAY;EAAA,QAEsCL,OAAO;AAAA;AAAAyB,EAAA,GAFzDpB,YAAY;AA2BrB,eAAeA,YAAY;;AAG3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}