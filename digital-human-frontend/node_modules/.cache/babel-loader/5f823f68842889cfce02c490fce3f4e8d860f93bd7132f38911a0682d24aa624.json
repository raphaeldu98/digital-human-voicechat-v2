{"ast":null,"code":"import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nconst isOrthographic = def => def && def.isOrthographicCamera;\nconst isObject3D = def => def && def.isObject3D;\nconst isBox3 = def => def && def.isBox3;\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const controls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n    return {\n      getSize,\n      refresh(object) {\n        if (isObject3D(object)) box.setFromObject(object);else if (isBox3(object)) box.copy(object);else if (ref.current) box.setFromObject(ref.current);\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n        return this;\n      },\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n            maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n          invalidate();\n        }\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        return this;\n      }\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clip, fit, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\nexport { Bounds, useBounds };","map":{"version":3,"names":["React","THREE","useThree","useFrame","isOrthographic","def","isOrthographicCamera","isObject3D","isBox3","context","createContext","Bounds","children","damping","fit","clip","margin","eps","onFit","ref","useRef","camera","state","controls","invalidate","onFitRef","current","equals","a","b","Math","abs","x","y","z","damp","v","t","lambda","delta","MathUtils","useState","animating","focus","Vector3","zoom","goal","box","Box3","api","useMemo","getSize","size","center","getCenter","maxSize","max","fitHeightDistance","atan","PI","fov","fitWidthDistance","aspect","distance","refresh","object","setFromObject","copy","isEmpty","position","length","setFromCenterAndSize","maxDistance","near","far","updateProjectionMatrix","update","target","direction","clone","sub","normalize","multiplyScalar","maxHeight","maxWidth","vertices","min","applyMatrix4","matrixWorldInverse","zoomForHeight","top","bottom","zoomForWidth","right","left","lookAt","useLayoutEffect","callback","addEventListener","removeEventListener","createElement","Provider","value","useBounds","useContext"],"sources":["/Users/chenyangdu/Downloads/digital-human-project-updated/digital-human-frontend/node_modules/@react-three/drei/core/Bounds.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst isObject3D = def => def && def.isObject3D;\n\nconst isBox3 = def => def && def.isBox3;\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  margin = 1.2,\n  eps = 0.01,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const controls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        if (isObject3D(object)) box.setFromObject(object);else if (isBox3(object)) box.copy(object);else if (ref.current) box.setFromObject(ref.current);\n\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n\n          invalidate();\n        }\n\n        if (onFitRef.current) onFitRef.current(this.getSize());\n        return this;\n      }\n\n    };\n  }, [box, camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [clip, fit, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}