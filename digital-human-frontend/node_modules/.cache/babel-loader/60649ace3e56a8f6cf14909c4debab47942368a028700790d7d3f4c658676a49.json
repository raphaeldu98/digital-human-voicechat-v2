{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const events = useThree(({\n    events\n  }) => events);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\nexport { OrbitControls };","map":{"version":3,"names":["_extends","useThree","useFrame","React","OrbitControls","OrbitControls$1","forwardRef","makeDefault","camera","regress","domElement","enableDamping","onChange","onStart","onEnd","restProps","ref","invalidate","defaultCamera","gl","events","set","get","performance","explCamera","explDomElement","connected","controls","useMemo","enabled","update","useEffect","callback","e","connect","addEventListener","removeEventListener","dispose","old","createElement","object"],"sources":["C:/Users/h/Downloads/digital-human/digital-human/digital-human/digital-human-frontend/node_modules/@react-three/drei/core/OrbitControls.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /*#__PURE__*/React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const defaultCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const events = useThree(({\n    events\n  }) => events);\n  const set = useThree(({\n    set\n  }) => set);\n  const get = useThree(({\n    get\n  }) => get);\n  const performance = useThree(({\n    performance\n  }) => performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || (typeof events.connected !== 'boolean' ? events.connected : gl.domElement);\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  });\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n\n    controls.connect(explDomElement);\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [explDomElement, onChange, onStart, onEnd, regress, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      // @ts-expect-error new in @react-three/fiber@7.0.5\n      const old = get().controls; // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      set({\n        controls\n      }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n      return () => set({\n        controls: old\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}