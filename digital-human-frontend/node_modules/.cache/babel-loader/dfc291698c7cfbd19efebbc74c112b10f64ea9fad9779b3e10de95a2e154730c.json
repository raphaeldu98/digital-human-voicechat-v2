{"ast":null,"code":"var _jsxFileName = \"/Users/chenyangdu/Downloads/digital-human-project-updated/digital-human-frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DigitalHuman() {\n  _s();\n  const {\n    scene\n  } = useGLTF('/models/digital-human.glb');\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene,\n    scale: 0.5,\n    position: [0, -1.5, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n_s(DigitalHuman, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c = DigitalHuman;\nfunction App() {\n  _s2();\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleUserInput = async input => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input\n        })\n      });\n      const data = await response.json();\n      setConversation(prev => [...prev, {\n        user: input,\n        bot: data.response\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digital-human\",\n      children: /*#__PURE__*/_jsxDEV(Canvas, {\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n          intensity: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          position: [0, 5, 5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation\",\n      children: [conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", msg.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bot: \", msg.bot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyDown: e => {\n        if (e.key === 'Enter') {\n          handleUserInput(e.target.value);\n          e.target.value = '';\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"7XFie8kcms8v8jpJ49H3AmmMl3E=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"DigitalHuman\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Canvas","OrbitControls","useGLTF","jsxDEV","_jsxDEV","DigitalHuman","_s","scene","object","scale","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","conversation","setConversation","loading","setLoading","handleUserInput","input","response","fetch","method","headers","body","JSON","stringify","data","json","prev","user","bot","error","console","className","children","intensity","map","msg","index","type","onKeyDown","e","key","target","value","_c2","$RefreshReg$"],"sources":["/Users/chenyangdu/Downloads/digital-human-project-updated/digital-human-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\nimport './App.css';\n\nfunction DigitalHuman() {\n  const { scene } = useGLTF('/models/digital-human.glb');\n  return <primitive object={scene} scale={0.5} position={[0, -1.5, 0]} />;\n}\n\nfunction App() {\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleUserInput = async (input) => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ input }),\n      });\n      const data = await response.json();\n      setConversation((prev) => [...prev, { user: input, bot: data.response }]);\n    } catch (error) {\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"digital-human\">\n        <Canvas>\n          <ambientLight intensity={0.5} />\n          <directionalLight position={[0, 5, 5]} />\n          {/* <DigitalHuman /> */}\n          <OrbitControls />\n        </Canvas>\n      </div>\n      <div className=\"conversation\">\n        {conversation.map((msg, index) => (\n          <div key={index}>\n            <p>User: {msg.user}</p>\n            <p>Bot: {msg.bot}</p>\n          </div>\n        ))}\n        {loading && <p>Loading...</p>}\n      </div>\n      <input\n        type=\"text\"\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            handleUserInput(e.target.value);\n            e.target.value = '';\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}