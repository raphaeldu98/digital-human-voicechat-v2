{"ast":null,"code":"var _jsxFileName = \"/Users/chenyangdu/Desktop/SCU/\\u627E\\u5DE5/\\u8054\\u60F3/untitled folder/digital-human/digital-human/digital-human/digital-human-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, Suspense } from 'react';\n// import { Canvas } from '@react-three/fiber';\n// import { OrbitControls } from '@react-three/drei';\n// import './App.css';\n// import ErrorBoundary from './ErrorBoundary';\n// import VoiceInput from './VoiceInput';\n\n// const DigitalHuman = React.lazy(() => import('./DigitalHuman'));\n\n// function App() {\n//   const [conversation, setConversation] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [input, setInput] = useState(\"\");\n\n//   const handleUserInput = async (inputText) => {\n//     if (!inputText) return;\n//     setLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5001/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ input: inputText }),\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n//       }\n\n//       const data = await response.json();\n//       setConversation((prev) => [...prev, { user: inputText, bot: data.response }]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       alert(`Error: ${error.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInput(e.target.value);\n//   };\n\n//   const handleInputSubmit = () => {\n//     handleUserInput(input);\n//     setInput(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"digital-human\">\n//         <ErrorBoundary>\n//           <Suspense fallback={<p>Loading model...</p>}>\n//             <Canvas>\n//               <ambientLight intensity={1} />\n//               <directionalLight position={[0, 5, 5]} />\n//               <DigitalHuman />\n//               <OrbitControls />\n//             </Canvas>\n//           </Suspense>\n//         </ErrorBoundary>\n//       </div>\n//       <div className=\"conversation\">\n//         {conversation.map((msg, index) => (\n//           <div key={index}>\n//             <p>User: {msg.user}</p>\n//             <p>Bot: {msg.bot}</p>\n//           </div>\n//         ))}\n//         {loading && <p>Loading...</p>}\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           onChange={handleInputChange}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               handleInputSubmit();\n//             }\n//           }}\n//         />\n//         <button onClick={handleInputSubmit}>Send</button>\n//         <VoiceInput onInput={handleUserInput} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport ErrorBoundary from './ErrorBoundary';\nimport VoiceInput from './VoiceInput';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DigitalHuman = /*#__PURE__*/React.lazy(_c = () => import('./DigitalHuman'));\n_c2 = DigitalHuman;\nfunction App() {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isListening, setIsListening] = useState(false); // 用于控制语音输入\n\n  const handleUserInput = async inputText => {\n    if (!inputText) return;\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: inputText\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n      }\n      const data = await response.json();\n      const botResponse = data.response;\n      const audioFilePath = data.audioFilePath;\n      setConversation(prev => [...prev, {\n        user: inputText,\n        bot: botResponse\n      }]);\n      //playAudio(audioFilePath);  // 调用语音输出\n      speak(botResponse);\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const playAudio = audioFilePath => {\n    const audio = new Audio(audioFilePath);\n    audio.play();\n  };\n  const speak = text => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'zh-CN'; // 设置语言为中文\n      utterance.onstart = () => setIsSpeaking(true);\n      utterance.onend = () => setIsSpeaking(false);\n      window.speechSynthesis.speak(utterance);\n    } else {\n      alert(\"您的浏览器不支持语音合成功能。\");\n    }\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleInputSubmit = () => {\n    handleUserInput(input);\n    setInput(\"\");\n  };\n  const toggleListening = () => {\n    setIsListening(!isListening);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digital-human\",\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading model...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Canvas, {\n            children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n              intensity: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n              position: [0, 5, 5]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DigitalHuman, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation\",\n      children: [conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", msg.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bot: \", msg.bot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            handleInputSubmit();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInputSubmit,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoiceInput, {\n        onInput: handleUserInput,\n        isSpeaking: isSpeaking,\n        isListening: isListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        children: isListening ? \"Stop Voice Input\" : \"Start Voice Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TLogfXzSQYOZ51fHA0lVDXowpA4=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DigitalHuman$React.lazy\");\n$RefreshReg$(_c2, \"DigitalHuman\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Suspense","Canvas","OrbitControls","ErrorBoundary","VoiceInput","jsxDEV","_jsxDEV","DigitalHuman","lazy","_c","_c2","App","_s","conversation","setConversation","loading","setLoading","input","setInput","isSpeaking","setIsSpeaking","isListening","setIsListening","handleUserInput","inputText","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","error","data","botResponse","audioFilePath","prev","user","bot","speak","console","alert","playAudio","audio","Audio","play","text","window","utterance","SpeechSynthesisUtterance","lang","onstart","onend","speechSynthesis","handleInputChange","e","target","value","handleInputSubmit","toggleListening","className","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","intensity","position","map","msg","index","type","onChange","onKeyDown","key","onClick","onInput","_c3","$RefreshReg$"],"sources":["/Users/chenyangdu/Desktop/SCU/找工/联想/untitled folder/digital-human/digital-human/digital-human/digital-human-frontend/src/App.js"],"sourcesContent":["// import React, { useState, Suspense } from 'react';\n// import { Canvas } from '@react-three/fiber';\n// import { OrbitControls } from '@react-three/drei';\n// import './App.css';\n// import ErrorBoundary from './ErrorBoundary';\n// import VoiceInput from './VoiceInput';\n\n// const DigitalHuman = React.lazy(() => import('./DigitalHuman'));\n\n// function App() {\n//   const [conversation, setConversation] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [input, setInput] = useState(\"\");\n\n//   const handleUserInput = async (inputText) => {\n//     if (!inputText) return;\n//     setLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5001/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ input: inputText }),\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n//       }\n\n//       const data = await response.json();\n//       setConversation((prev) => [...prev, { user: inputText, bot: data.response }]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       alert(`Error: ${error.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInput(e.target.value);\n//   };\n\n//   const handleInputSubmit = () => {\n//     handleUserInput(input);\n//     setInput(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"digital-human\">\n//         <ErrorBoundary>\n//           <Suspense fallback={<p>Loading model...</p>}>\n//             <Canvas>\n//               <ambientLight intensity={1} />\n//               <directionalLight position={[0, 5, 5]} />\n//               <DigitalHuman />\n//               <OrbitControls />\n//             </Canvas>\n//           </Suspense>\n//         </ErrorBoundary>\n//       </div>\n//       <div className=\"conversation\">\n//         {conversation.map((msg, index) => (\n//           <div key={index}>\n//             <p>User: {msg.user}</p>\n//             <p>Bot: {msg.bot}</p>\n//           </div>\n//         ))}\n//         {loading && <p>Loading...</p>}\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           onChange={handleInputChange}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               handleInputSubmit();\n//             }\n//           }}\n//         />\n//         <button onClick={handleInputSubmit}>Send</button>\n//         <VoiceInput onInput={handleUserInput} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\nimport React, { useState, Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport ErrorBoundary from './ErrorBoundary';\nimport VoiceInput from './VoiceInput';\nimport './App.css';\n\nconst DigitalHuman = React.lazy(() => import('./DigitalHuman'));\n\nfunction App() {\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isListening, setIsListening] = useState(false); // 用于控制语音输入\n\n  const handleUserInput = async (inputText) => {\n    if (!inputText) return;\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ input: inputText }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n      }\n\n      const data = await response.json();\n      const botResponse = data.response;\n      const audioFilePath = data.audioFilePath;\n      setConversation((prev) => [...prev, { user: inputText, bot: botResponse }]);\n      //playAudio(audioFilePath);  // 调用语音输出\n      speak(botResponse);\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const playAudio = (audioFilePath) => {\n    const audio = new Audio(audioFilePath);\n    audio.play();\n  };\n\n  const speak = (text) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'zh-CN'; // 设置语言为中文\n      utterance.onstart = () => setIsSpeaking(true);\n      utterance.onend = () => setIsSpeaking(false);\n      window.speechSynthesis.speak(utterance);\n    } else {\n      alert(\"您的浏览器不支持语音合成功能。\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleInputSubmit = () => {\n    handleUserInput(input);\n    setInput(\"\");\n  };\n\n  const toggleListening = () => {\n    setIsListening(!isListening);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"digital-human\">\n        <ErrorBoundary>\n          <Suspense fallback={<p>Loading model...</p>}>\n            <Canvas>\n              <ambientLight intensity={1} />\n              <directionalLight position={[0, 5, 5]} />\n              <DigitalHuman />\n              <OrbitControls />\n            </Canvas>\n          </Suspense>\n        </ErrorBoundary>\n      </div>\n      <div className=\"conversation\">\n        {conversation.map((msg, index) => (\n          <div key={index}>\n            <p>User: {msg.user}</p>\n            <p>Bot: {msg.bot}</p>\n          </div>\n        ))}\n        {loading && <p>Loading...</p>}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleInputSubmit();\n            }\n          }}\n        />\n        <button onClick={handleInputSubmit}>Send</button>\n        <VoiceInput onInput={handleUserInput} isSpeaking={isSpeaking} isListening={isListening} />\n        <button onClick={toggleListening}>\n          {isListening ? \"Stop Voice Input\" : \"Start Voice Input\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,gBAAGT,KAAK,CAACU,IAAI,CAAAC,EAAA,GAACA,CAAA,KAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAACC,GAAA,GAA1DH,YAAY;AAElB,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEvD,MAAMwB,eAAe,GAAG,MAAOC,SAAS,IAAK;IAC3C,IAAI,CAACA,SAAS,EAAE;IAChBR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,KAAK,EAAEO;QAAU,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAAC,UAAUF,SAAS,CAACG,OAAO,MAAMN,IAAI,CAACC,SAAS,CAACE,SAAS,CAACI,KAAK,CAAC,EAAE,CAAC;MACrF;MAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMK,WAAW,GAAGD,IAAI,CAACb,QAAQ;MACjC,MAAMe,aAAa,GAAGF,IAAI,CAACE,aAAa;MACxC1B,eAAe,CAAE2B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,IAAI,EAAElB,SAAS;QAAEmB,GAAG,EAAEJ;MAAY,CAAC,CAAC,CAAC;MAC3E;MACAK,KAAK,CAACL,WAAW,CAAC;IACpB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdQ,OAAO,CAACR,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BS,KAAK,CAAC,UAAUT,KAAK,CAACD,OAAO,EAAE,CAAC;IAClC,CAAC,SAAS;MACRpB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM+B,SAAS,GAAIP,aAAa,IAAK;IACnC,MAAMQ,KAAK,GAAG,IAAIC,KAAK,CAACT,aAAa,CAAC;IACtCQ,KAAK,CAACE,IAAI,CAAC,CAAC;EACd,CAAC;EAED,MAAMN,KAAK,GAAIO,IAAI,IAAK;IACtB,IAAI,iBAAiB,IAAIC,MAAM,EAAE;MAC/B,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACH,IAAI,CAAC;MACpDE,SAAS,CAACE,IAAI,GAAG,OAAO,CAAC,CAAC;MAC1BF,SAAS,CAACG,OAAO,GAAG,MAAMpC,aAAa,CAAC,IAAI,CAAC;MAC7CiC,SAAS,CAACI,KAAK,GAAG,MAAMrC,aAAa,CAAC,KAAK,CAAC;MAC5CgC,MAAM,CAACM,eAAe,CAACd,KAAK,CAACS,SAAS,CAAC;IACzC,CAAC,MAAM;MACLP,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,MAAMa,iBAAiB,GAAIC,CAAC,IAAK;IAC/B1C,QAAQ,CAAC0C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BxC,eAAe,CAACN,KAAK,CAAC;IACtBC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAM8C,eAAe,GAAGA,CAAA,KAAM;IAC5B1C,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEf,OAAA;IAAK2D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5D,OAAA;MAAK2D,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B5D,OAAA,CAACH,aAAa;QAAA+D,QAAA,eACZ5D,OAAA,CAACN,QAAQ;UAACmE,QAAQ,eAAE7D,OAAA;YAAA4D,QAAA,EAAG;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAE;UAAAL,QAAA,eAC1C5D,OAAA,CAACL,MAAM;YAAAiE,QAAA,gBACL5D,OAAA;cAAckE,SAAS,EAAE;YAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9BjE,OAAA;cAAkBmE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzCjE,OAAA,CAACC,YAAY;cAAA6D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAChBjE,OAAA,CAACJ,aAAa;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNjE,OAAA;MAAK2D,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC1BrD,YAAY,CAAC6D,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3BtE,OAAA;QAAA4D,QAAA,gBACE5D,OAAA;UAAA4D,QAAA,GAAG,QAAM,EAACS,GAAG,CAACjC,IAAI;QAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBjE,OAAA;UAAA4D,QAAA,GAAG,OAAK,EAACS,GAAG,CAAChC,GAAG;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFbK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN,CAAC,EACDxD,OAAO,iBAAIT,OAAA;QAAA4D,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACNjE,OAAA;MAAK2D,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B5D,OAAA;QACEuE,IAAI,EAAC,MAAM;QACXf,KAAK,EAAE7C,KAAM;QACb6D,QAAQ,EAAEnB,iBAAkB;QAC5BoB,SAAS,EAAGnB,CAAC,IAAK;UAChB,IAAIA,CAAC,CAACoB,GAAG,KAAK,OAAO,EAAE;YACrBjB,iBAAiB,CAAC,CAAC;UACrB;QACF;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFjE,OAAA;QAAQ2E,OAAO,EAAElB,iBAAkB;QAAAG,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjDjE,OAAA,CAACF,UAAU;QAAC8E,OAAO,EAAE3D,eAAgB;QAACJ,UAAU,EAAEA,UAAW;QAACE,WAAW,EAAEA;MAAY;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1FjE,OAAA;QAAQ2E,OAAO,EAAEjB,eAAgB;QAAAE,QAAA,EAC9B7C,WAAW,GAAG,kBAAkB,GAAG;MAAmB;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3D,EAAA,CA9GQD,GAAG;AAAAwE,GAAA,GAAHxE,GAAG;AAgHZ,eAAeA,GAAG;AAAC,IAAAF,EAAA,EAAAC,GAAA,EAAAyE,GAAA;AAAAC,YAAA,CAAA3E,EAAA;AAAA2E,YAAA,CAAA1E,GAAA;AAAA0E,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}