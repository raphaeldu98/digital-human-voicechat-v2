{"ast":null,"code":"var _jsxFileName = \"/Users/chenyangdu/Desktop/SCU/\\u627E\\u5DE5/\\u8054\\u60F3/untitled folder/digital-human/digital-human/digital-human/digital-human-frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, Suspense } from 'react';\n// import { Canvas } from '@react-three/fiber';\n// import { OrbitControls } from '@react-three/drei';\n// import './App.css';\n// import ErrorBoundary from './ErrorBoundary';\n// import VoiceInput from './VoiceInput';\n\n// const DigitalHuman = React.lazy(() => import('./DigitalHuman'));\n\n// function App() {\n//   const [conversation, setConversation] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [input, setInput] = useState(\"\");\n\n//   const handleUserInput = async (inputText) => {\n//     if (!inputText) return;\n//     setLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5001/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ input: inputText }),\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n//       }\n\n//       const data = await response.json();\n//       setConversation((prev) => [...prev, { user: inputText, bot: data.response }]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       alert(`Error: ${error.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInput(e.target.value);\n//   };\n\n//   const handleInputSubmit = () => {\n//     handleUserInput(input);\n//     setInput(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"digital-human\">\n//         <ErrorBoundary>\n//           <Suspense fallback={<p>Loading model...</p>}>\n//             <Canvas>\n//               <ambientLight intensity={1} />\n//               <directionalLight position={[0, 5, 5]} />\n//               <DigitalHuman />\n//               <OrbitControls />\n//             </Canvas>\n//           </Suspense>\n//         </ErrorBoundary>\n//       </div>\n//       <div className=\"conversation\">\n//         {conversation.map((msg, index) => (\n//           <div key={index}>\n//             <p>User: {msg.user}</p>\n//             <p>Bot: {msg.bot}</p>\n//           </div>\n//         ))}\n//         {loading && <p>Loading...</p>}\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           onChange={handleInputChange}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               handleInputSubmit();\n//             }\n//           }}\n//         />\n//         <button onClick={handleInputSubmit}>Send</button>\n//         <VoiceInput onInput={handleUserInput} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport ErrorBoundary from './ErrorBoundary';\nimport VoiceInput from './VoiceInput';\nconst DigitalHuman = /*#__PURE__*/React.lazy(_c = () => import('./DigitalHuman'));\n_c2 = DigitalHuman;\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const handleUserInput = async inputText => {\n    if (!inputText) return;\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: inputText\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n      }\n      const data = await response.json();\n      setConversation(prev => [...prev, {\n        user: inputText,\n        bot: data.response\n      }]);\n      // 语音合成\n      const utterance = new SpeechSynthesisUtterance(data.response);\n      utterance.lang = 'zh-CN'; // 设置语言为中文\n      window.speechSynthesis.speak(utterance);\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleInputSubmit = () => {\n    handleUserInput(input);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"digital-human\",\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading model...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 31\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Canvas, {\n            children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n              intensity: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n              position: [0, 5, 5]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DigitalHuman, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation\",\n      children: [conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", msg.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bot: \", msg.bot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            handleInputSubmit();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInputSubmit,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoiceInput, {\n        onInput: handleUserInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XEwc87r2CT/fUCnAaFx0n6E4rKo=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DigitalHuman$React.lazy\");\n$RefreshReg$(_c2, \"DigitalHuman\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Suspense","Canvas","OrbitControls","ErrorBoundary","VoiceInput","DigitalHuman","lazy","_c","_c2","jsxDEV","_jsxDEV","App","_s","conversation","setConversation","loading","setLoading","input","setInput","handleUserInput","inputText","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","error","data","prev","user","bot","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","console","alert","handleInputChange","e","target","value","handleInputSubmit","className","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","intensity","position","map","msg","index","type","onChange","onKeyDown","key","onClick","onInput","_c3","$RefreshReg$"],"sources":["/Users/chenyangdu/Desktop/SCU/找工/联想/untitled folder/digital-human/digital-human/digital-human/digital-human-frontend/src/App.js"],"sourcesContent":["// import React, { useState, Suspense } from 'react';\n// import { Canvas } from '@react-three/fiber';\n// import { OrbitControls } from '@react-three/drei';\n// import './App.css';\n// import ErrorBoundary from './ErrorBoundary';\n// import VoiceInput from './VoiceInput';\n\n// const DigitalHuman = React.lazy(() => import('./DigitalHuman'));\n\n// function App() {\n//   const [conversation, setConversation] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [input, setInput] = useState(\"\");\n\n//   const handleUserInput = async (inputText) => {\n//     if (!inputText) return;\n//     setLoading(true);\n//     try {\n//       const response = await fetch('http://localhost:5001/api/chat', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ input: inputText }),\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n//       }\n\n//       const data = await response.json();\n//       setConversation((prev) => [...prev, { user: inputText, bot: data.response }]);\n//     } catch (error) {\n//       console.error('Error:', error);\n//       alert(`Error: ${error.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setInput(e.target.value);\n//   };\n\n//   const handleInputSubmit = () => {\n//     handleUserInput(input);\n//     setInput(\"\");\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"digital-human\">\n//         <ErrorBoundary>\n//           <Suspense fallback={<p>Loading model...</p>}>\n//             <Canvas>\n//               <ambientLight intensity={1} />\n//               <directionalLight position={[0, 5, 5]} />\n//               <DigitalHuman />\n//               <OrbitControls />\n//             </Canvas>\n//           </Suspense>\n//         </ErrorBoundary>\n//       </div>\n//       <div className=\"conversation\">\n//         {conversation.map((msg, index) => (\n//           <div key={index}>\n//             <p>User: {msg.user}</p>\n//             <p>Bot: {msg.bot}</p>\n//           </div>\n//         ))}\n//         {loading && <p>Loading...</p>}\n//       </div>\n//       <div className=\"input-container\">\n//         <input\n//           type=\"text\"\n//           value={input}\n//           onChange={handleInputChange}\n//           onKeyDown={(e) => {\n//             if (e.key === 'Enter') {\n//               handleInputSubmit();\n//             }\n//           }}\n//         />\n//         <button onClick={handleInputSubmit}>Send</button>\n//         <VoiceInput onInput={handleUserInput} />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\nimport React, { useState, Suspense } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport ErrorBoundary from './ErrorBoundary';\nimport VoiceInput from './VoiceInput';\nconst DigitalHuman = React.lazy(() => import('./DigitalHuman'));\nimport './App.css';\n\nfunction App() {\n  const [conversation, setConversation] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [input, setInput] = useState(\"\");\n\n  const handleUserInput = async (inputText) => {\n    if (!inputText) return;\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ input: inputText }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error: ${errorData.message} - ${JSON.stringify(errorData.error)}`);\n      }\n\n      const data = await response.json();\n      setConversation((prev) => [...prev, { user: inputText, bot: data.response }]);\n      // 语音合成\n      const utterance = new SpeechSynthesisUtterance(data.response);\n      utterance.lang = 'zh-CN'; // 设置语言为中文\n      window.speechSynthesis.speak(utterance);\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleInputSubmit = () => {\n    handleUserInput(input);\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"digital-human\">\n        <ErrorBoundary>\n          <Suspense fallback={<p>Loading model...</p>}>\n            <Canvas>\n              <ambientLight intensity={1} />\n              <directionalLight position={[0, 5, 5]} />\n              <DigitalHuman />\n              <OrbitControls />\n            </Canvas>\n          </Suspense>\n        </ErrorBoundary>\n      </div>\n      <div className=\"conversation\">\n        {conversation.map((msg, index) => (\n          <div key={index}>\n            <p>User: {msg.user}</p>\n            <p>Bot: {msg.bot}</p>\n          </div>\n        ))}\n        {loading && <p>Loading...</p>}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleInputSubmit();\n            }\n          }}\n        />\n        <button onClick={handleInputSubmit}>Send</button>\n        <VoiceInput onInput={handleUserInput} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}