{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nconst VoiceInput = ({\n  onInput,\n  isSpeaking\n}) => {\n  _s();\n  const recognition = useRef(null);\n  const [isListening, setIsListening] = useState(false);\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window) {\n      recognition.current = new window.webkitSpeechRecognition();\n      recognition.current.continuous = true;\n      recognition.current.interimResults = true;\n      recognition.current.lang = 'zh-CN'; // 设置语言为中文\n\n      recognition.current.onresult = event => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        if (finalTranscript) {\n          onInput(finalTranscript);\n        }\n      };\n      recognition.current.onerror = event => {\n        console.error('Speech recognition error', event);\n        if (event.error === 'not-allowed' || event.error === 'service-not-allowed') {\n          alert('麦克风访问被拒绝或服务不可用');\n        }\n      };\n      recognition.current.onend = () => {\n        if (isListening && !isSpeaking) {\n          recognition.current.start(); // 重新启动语音识别\n        }\n      };\n    } else {\n      alert('您的浏览器不支持语音识别功能。');\n    }\n  }, [isListening, isSpeaking, onInput]);\n  useEffect(() => {\n    if (isSpeaking) {\n      recognition.current.stop(); // 暂停语音识别\n    } else if (isListening) {\n      recognition.current.start(); // 恢复语音识别\n    }\n  }, [isSpeaking]);\n  const startListening = () => {\n    if (recognition.current) {\n      recognition.current.start();\n      setIsListening(true);\n    }\n  };\n  useEffect(() => {\n    startListening();\n    return () => {\n      if (recognition.current) {\n        recognition.current.stop();\n      }\n    };\n  }, []);\n  return null;\n};\n_s(VoiceInput, \"/FSJtPe4rM/Ep5MJbV+hXNA4lZU=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useEffect","useRef","useState","VoiceInput","onInput","isSpeaking","_s","recognition","isListening","setIsListening","window","current","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","transcript","onerror","console","error","alert","onend","start","stop","startListening","_c","$RefreshReg$"],"sources":["/Users/chenyangdu/Desktop/SCU/找工/联想/untitled folder/digital-human/digital-human/digital-human/digital-human-frontend/src/VoiceInput.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst VoiceInput = ({ onInput, isSpeaking }) => {\n  const recognition = useRef(null);\n  const [isListening, setIsListening] = useState(false);\n\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window) {\n      recognition.current = new window.webkitSpeechRecognition();\n      recognition.current.continuous = true;\n      recognition.current.interimResults = true;\n      recognition.current.lang = 'zh-CN'; // 设置语言为中文\n\n      recognition.current.onresult = (event) => {\n        let finalTranscript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            finalTranscript += event.results[i][0].transcript;\n          }\n        }\n        if (finalTranscript) {\n          onInput(finalTranscript);\n        }\n      };\n\n      recognition.current.onerror = (event) => {\n        console.error('Speech recognition error', event);\n        if (event.error === 'not-allowed' || event.error === 'service-not-allowed') {\n          alert('麦克风访问被拒绝或服务不可用');\n        }\n      };\n\n      recognition.current.onend = () => {\n        if (isListening && !isSpeaking) {\n          recognition.current.start(); // 重新启动语音识别\n        }\n      };\n    } else {\n      alert('您的浏览器不支持语音识别功能。');\n    }\n  }, [isListening, isSpeaking, onInput]);\n\n  useEffect(() => {\n    if (isSpeaking) {\n      recognition.current.stop(); // 暂停语音识别\n    } else if (isListening) {\n      recognition.current.start(); // 恢复语音识别\n    }\n  }, [isSpeaking]);\n\n  const startListening = () => {\n    if (recognition.current) {\n      recognition.current.start();\n      setIsListening(true);\n    }\n  };\n\n  useEffect(() => {\n    startListening();\n    return () => {\n      if (recognition.current) {\n        recognition.current.stop();\n      }\n    };\n  }, []);\n\n  return null;\n};\n\nexport default VoiceInput;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,WAAW,GAAGN,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAErDF,SAAS,CAAC,MAAM;IACd,IAAI,yBAAyB,IAAIU,MAAM,EAAE;MACvCH,WAAW,CAACI,OAAO,GAAG,IAAID,MAAM,CAACE,uBAAuB,CAAC,CAAC;MAC1DL,WAAW,CAACI,OAAO,CAACE,UAAU,GAAG,IAAI;MACrCN,WAAW,CAACI,OAAO,CAACG,cAAc,GAAG,IAAI;MACzCP,WAAW,CAACI,OAAO,CAACI,IAAI,GAAG,OAAO,CAAC,CAAC;;MAEpCR,WAAW,CAACI,OAAO,CAACK,QAAQ,GAAIC,KAAK,IAAK;QACxC,IAAIC,eAAe,GAAG,EAAE;QACxB,KAAK,IAAIC,CAAC,GAAGF,KAAK,CAACG,WAAW,EAAED,CAAC,GAAGF,KAAK,CAACI,OAAO,CAACC,MAAM,EAAE,EAAEH,CAAC,EAAE;UAC7D,IAAIF,KAAK,CAACI,OAAO,CAACF,CAAC,CAAC,CAACI,OAAO,EAAE;YAC5BL,eAAe,IAAID,KAAK,CAACI,OAAO,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,UAAU;UACnD;QACF;QACA,IAAIN,eAAe,EAAE;UACnBd,OAAO,CAACc,eAAe,CAAC;QAC1B;MACF,CAAC;MAEDX,WAAW,CAACI,OAAO,CAACc,OAAO,GAAIR,KAAK,IAAK;QACvCS,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEV,KAAK,CAAC;QAChD,IAAIA,KAAK,CAACU,KAAK,KAAK,aAAa,IAAIV,KAAK,CAACU,KAAK,KAAK,qBAAqB,EAAE;UAC1EC,KAAK,CAAC,gBAAgB,CAAC;QACzB;MACF,CAAC;MAEDrB,WAAW,CAACI,OAAO,CAACkB,KAAK,GAAG,MAAM;QAChC,IAAIrB,WAAW,IAAI,CAACH,UAAU,EAAE;UAC9BE,WAAW,CAACI,OAAO,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B;MACF,CAAC;IACH,CAAC,MAAM;MACLF,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC,EAAE,CAACpB,WAAW,EAAEH,UAAU,EAAED,OAAO,CAAC,CAAC;EAEtCJ,SAAS,CAAC,MAAM;IACd,IAAIK,UAAU,EAAE;MACdE,WAAW,CAACI,OAAO,CAACoB,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAIvB,WAAW,EAAE;MACtBD,WAAW,CAACI,OAAO,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC,EAAE,CAACzB,UAAU,CAAC,CAAC;EAEhB,MAAM2B,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIzB,WAAW,CAACI,OAAO,EAAE;MACvBJ,WAAW,CAACI,OAAO,CAACmB,KAAK,CAAC,CAAC;MAC3BrB,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdgC,cAAc,CAAC,CAAC;IAChB,OAAO,MAAM;MACX,IAAIzB,WAAW,CAACI,OAAO,EAAE;QACvBJ,WAAW,CAACI,OAAO,CAACoB,IAAI,CAAC,CAAC;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb,CAAC;AAACzB,EAAA,CAjEIH,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAmEhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}