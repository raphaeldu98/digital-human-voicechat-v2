{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n      count++;\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n    for (i = 0; i < instances.length; i++) {\n      var _instances$i$current;\n      Object.assign(events, (_instances$i$current = instances[i].current) == null ? void 0 : _instances$i$current.__r3f.handlers);\n    }\n    return Object.keys(events).reduce((prev, key) => ({\n      ...prev,\n      [key]: event => {\n        var _instances$event$inst, _r3f, _r3f$handlers;\n        const object = (_instances$event$inst = instances[event.instanceId]) == null ? void 0 : _instances$event$inst.current;\n        return object == null ? void 0 : (_r3f = object.__r3f) == null ? void 0 : (_r3f$handlers = _r3f.handlers) == null ? void 0 : _r3f$handlers[key]({\n          ...event,\n          object\n        });\n      }\n    }), {});\n  }, [children, instances]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {})));\n}\nexport { Instance, Instances, Merged };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","Position","i","instanceRef","globalContext","createContext","parentMatrix","Matrix4","instanceMatrix","tempMatrix","color","Color","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","context","children","props","ref","useMemo","group","useRef","subscribe","useContext","useLayoutEffect","createElement","Instances","range","limit","frames","Infinity","instance","useState","parentRef","instances","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","current","count","updateRange","instanceColor","Math","min","undefined","length","useEffect","needsUpdate","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","decompose","compose","premultiply","equals","fromArray","events","_instances$i$current","Object","assign","__r3f","handlers","keys","reduce","prev","key","event","_instances$event$inst","_r3f","_r3f$handlers","object","instanceId","api","filter","item","matrixAutoUpdate","args","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","meshes","isArray","isMesh","components","values","geometry","material","uuid","acc"],"sources":["C:/Users/h/Downloads/digital-human/digital-human/digital-human/digital-human-frontend/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\n\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < instances.length; i++) {\n      var _instances$i$current;\n\n      Object.assign(events, (_instances$i$current = instances[i].current) == null ? void 0 : _instances$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: event => {\n        var _instances$event$inst, _r3f, _r3f$handlers;\n\n        const object = (_instances$event$inst = instances[event.instanceId]) == null ? void 0 : _instances$event$inst.current;\n        return object == null ? void 0 : (_r3f = object.__r3f) == null ? void 0 : (_r3f$handlers = _r3f.handlers) == null ? void 0 : _r3f$handlers[key]({ ...event,\n          object\n        });\n      }\n    }), {});\n  }, [children, instances]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}